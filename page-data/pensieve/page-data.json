{"componentChunkName":"component---src-pages-pensieve-index-js","path":"/pensieve/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Hive & Trino Materialized View","description":"Using Materialized View to improve query result for end client.","slug":"/pensieve/materialized-view","date":"2023-02-01T00:00:00.000Z","tags":["Hive","Trino","Materialized View"],"draft":false},"html":"<p>Datalake On-promise a Societe Generale, on utilise Hive 4.0(Cloudera version 7.x) et Trino/Starburst Cluster pour faire des requetages analytiques, dans ce context, je partis en pilot pour faire la comparaison entre les deux view materilise:</p>\n<ul>\n<li>Travaille avec l'equipe infrastructure Datalake(LUCID) pour relever des problemes rencontree.</li>\n<li>Partage des retours avec l'editor Starburst/Trino pour les pointes bloquant au niveau d'activation Cache Service, Data Product et aussi la securite (impersonation)</li>\n<li>Implemtation sur la DEV pour la partie technique et sur la PRD pour la partie performance.</li>\n</ul>\n<h2>HIVE</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> MATERIALIZED <span class=\"token keyword\">VIEW</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>multiapp_control_materialized_view<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DESCRIBE</span> FORMATTED prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>multiapp_control_materialized_view<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> MATERIALIZED <span class=\"token keyword\">VIEW</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>multiapp_control_materialized_view PARTITIONED <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>fiscal_year<span class=\"token punctuation\">)</span>\nstored <span class=\"token keyword\">as</span> orc\nlocation <span class=\"token string\">'/prd/uv/ptv_a8688/uv_ptv_a8688_proratavat/anh_test_materialized_view/multi_app_control'</span>\n<span class=\"token keyword\">as</span>\n<span class=\"token keyword\">with</span> gl <span class=\"token keyword\">as</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">select</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span>\n\t  \tcode_pci<span class=\"token punctuation\">,</span>\n\t  \taltacct_descr<span class=\"token punctuation\">,</span>\n\t\tSORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_array_brute<span class=\"token punctuation\">,</span>\n\t\tCONCAT_WS<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> SORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_liste_brute<span class=\"token punctuation\">,</span>\n\t\tSORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_array_brute\n\t<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">select</span>\n\t\t\tuv<span class=\"token punctuation\">.</span>fiscal_year<span class=\"token punctuation\">,</span> \t\n\t\t\tcode_pci<span class=\"token punctuation\">,</span>\n\t\t\taltacct_descr<span class=\"token punctuation\">,</span>\n\t\t\tsource<span class=\"token punctuation\">,</span>\n\t\t\ttrim<span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">)</span> event_nature\n\t\t<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span> \n\t\t\t<span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span>\n\t\t\t\tfiscal_year<span class=\"token punctuation\">,</span>\n\t\t\t\tcast<span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">(</span>accounting_period<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> accounting_period<span class=\"token punctuation\">,</span> substr<span class=\"token punctuation\">(</span>accounting_period<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> accounting_period_2<span class=\"token punctuation\">,</span>\n\t\t\t\taltacct code_pci<span class=\"token punctuation\">,</span>\n\t\t\t\taltacct_descr<span class=\"token punctuation\">,</span>\n\t\t\t\tsource<span class=\"token punctuation\">,</span>\n\t\t\t\tevent_nature\n\t\t\t<span class=\"token keyword\">from</span> prd_suv_fni_a8401_glapf<span class=\"token punctuation\">.</span>suv_glapf \n\t \t\t<span class=\"token keyword\">where</span> business_unit\t<span class=\"token operator\">=</span> <span class=\"token string\">'G0001'</span> \n\t  \t  \t  <span class=\"token operator\">and</span> cast<span class=\"token punctuation\">(</span>fiscal_year <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> \t<span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t\t\t  <span class=\"token operator\">and</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> fiscal_year <span class=\"token operator\">=</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\t\t\t\t\t\tcast<span class=\"token punctuation\">(</span>accounting_period <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> \n\t\t\t\t\t\t<span class=\"token operator\">or</span> accounting_period <span class=\"token operator\">=</span> concat<span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> lpad<span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t\t\t\t\t<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\tcast<span class=\"token punctuation\">(</span>accounting_period <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">12</span>\n\t\t\t\t\t\t<span class=\"token operator\">or</span> accounting_period <span class=\"token operator\">=</span> <span class=\"token string\">'912'</span><span class=\"token punctuation\">)</span>\t\t\t  \n\t\t      <span class=\"token operator\">and</span> ledger \t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token string\">'ACTUAL7003'</span>\n\t  \t      <span class=\"token operator\">and</span> origine \t\t\t\t\t\t<span class=\"token operator\">!=</span> <span class=\"token string\">'QTZ'</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t\t      <span class=\"token operator\">and</span> source \t\t\t\t\t\t<span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'RVM'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MIG'</span><span class=\"token punctuation\">)</span>\n\t\t\t  <span class=\"token operator\">and</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t    <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'991'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'992'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'994'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'995'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--filtrer les comptes de bilan</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t\t\t\t  </span>\n\t\t\t  <span class=\"token comment\">--PNL &amp; BILAN</span>\n\t\t      <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>\n\t\t           substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t\t<span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'976'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'977'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'986'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'987'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'996'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'997'</span><span class=\"token punctuation\">)</span>\n\t\t        <span class=\"token operator\">or</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>        <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'979'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'989'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t\t  \n\t\t<span class=\"token punctuation\">)</span> uv\n\t\t<span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span> \n\t\t\t<span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> \n\t\t\t\tcast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">)</span> fiscal_year<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> accounting_period<span class=\"token punctuation\">,</span>\n\t\t\t\tcomptepci_numero<span class=\"token punctuation\">,</span>\n\t\t\t\tcpt_codepcec \n\t\t\t<span class=\"token keyword\">from</span> prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_nsa_fnichartacc refe\n\t\t\t<span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span>\t\t\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">select</span> \n\t\t\t\t\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span>insert_date<span class=\"token punctuation\">)</span> max_insert_date<span class=\"token punctuation\">,</span>\n\t\t\t\t    cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fiscal_year   \n\t\t\t\t<span class=\"token keyword\">from</span> prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_nsa_fnichartacc\n\t\t\t\t<span class=\"token keyword\">where</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">)</span> refe_max\n\t\t\t\t<span class=\"token keyword\">on</span> refe<span class=\"token punctuation\">.</span>insert_date <span class=\"token operator\">=</span> refe_max<span class=\"token punctuation\">.</span>max_insert_date\n\t\t\t\t<span class=\"token operator\">and</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>refe<span class=\"token punctuation\">.</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> string<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> refe_max<span class=\"token punctuation\">.</span>fiscal_year\n\t\t\t<span class=\"token keyword\">where</span> cpt_codepcec <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'699'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'799'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'000000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'001000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'002000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'003000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'004000'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span> wi\n\t\t\t<span class=\"token keyword\">on</span> uv<span class=\"token punctuation\">.</span>fiscal_year \t\t\t<span class=\"token operator\">=</span> wi<span class=\"token punctuation\">.</span>fiscal_year\n\t\t\t<span class=\"token operator\">and</span> uv<span class=\"token punctuation\">.</span>code_pci \t\t\t<span class=\"token operator\">=</span> wi<span class=\"token punctuation\">.</span>comptepci_numero\n\t<span class=\"token punctuation\">)</span> uv2\n\t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span> \t\n\t\tcode_pci<span class=\"token punctuation\">,</span>\n\t\taltacct_descr\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nprorata <span class=\"token keyword\">as</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">select</span> \n\t    fiscal_year<span class=\"token punctuation\">,</span>\n\t    altacct <span class=\"token keyword\">as</span> code_pci<span class=\"token punctuation\">,</span>\n\t    SORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_array_prorata<span class=\"token punctuation\">,</span>\n\t\tCONCAT_WS<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> SORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_liste_prorata<span class=\"token punctuation\">,</span>\n\t\tSORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span><span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_array_prorata<span class=\"token punctuation\">,</span>\n\t\tCONCAT_WS<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> SORT_ARRAY<span class=\"token punctuation\">(</span>COLLECT_SET<span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_liste_prorata\n\t<span class=\"token keyword\">from</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>uv_proratavat\n\t<span class=\"token keyword\">where</span> cast<span class=\"token punctuation\">(</span>fiscal_year <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t  <span class=\"token operator\">and</span> origine \t\t<span class=\"token operator\">!=</span> <span class=\"token string\">'QTZ'</span>\n\t  <span class=\"token comment\">-- Avant retraitement</span>\n\t  <span class=\"token operator\">and</span> nom_retraitement <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span>\n\t  <span class=\"token comment\">--PNL &amp; BILAN</span>\n\t  <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'976'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'977'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'986'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'987'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'996'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'997'</span><span class=\"token punctuation\">)</span>\n\t   <span class=\"token operator\">or</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'979'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'989'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t  <span class=\"token operator\">and</span> source \t\t\t\t\t\t<span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'RVM'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MIG'</span><span class=\"token punctuation\">)</span>\n\t  <span class=\"token operator\">and</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t    <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'991'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'992'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'994'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'995'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--filtrer les comptes de bilan</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t\t\t   </span>\n\t  <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span> \n\t\taltacct \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nresult <span class=\"token keyword\">as</span> <span class=\"token punctuation\">(</span>\n<span class=\"token keyword\">select</span> gl2<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata<span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>event_nature_liste_prorata<span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>event_nature_array_prorata<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>prorata<span class=\"token punctuation\">.</span>code_pci <span class=\"token operator\">is</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OK'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'KO'</span><span class=\"token punctuation\">)</span> pci_in_prorata<span class=\"token punctuation\">,</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t<span class=\"token comment\">--if(gl2.multiappl_liste_brute = prorata.multiappl_liste_prorata, 'OK','KO') all_appl_srce_in_prorata,</span>\n\t<span class=\"token keyword\">case</span> \n\t\t<span class=\"token keyword\">when</span> gl2<span class=\"token punctuation\">.</span>multiappl_liste_brute <span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata <span class=\"token keyword\">then</span> <span class=\"token string\">'OK'</span>\n\t\t<span class=\"token keyword\">when</span> prorata<span class=\"token punctuation\">.</span>code_pci <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'N/A'</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token string\">'KO'</span>\n\t<span class=\"token keyword\">end</span> all_appl_srce_in_prorata\n<span class=\"token comment\">--END UPDATE JMC 20230317\t   </span>\n       <span class=\"token comment\">--array_intersect(gl2.multiappl_array_brute,prorata.multiappl_array_prorata) source_g_ds_prorata,</span>\n       <span class=\"token comment\">--if( prorata.multiappl_liste_prorata is null, gl2.multiappl_array_brute, array_except(gl2.multiappl_array_brute,prorata.multiappl_array_prorata) ) source_gl_pas_ds_prorata,</span>\n       <span class=\"token comment\">--if( prorata.event_nature_liste_prorata is null, gl2.event_nature_array_brute, array_except(gl2.event_nature_array_brute,prorata.event_nature_array_prorata) ) event_nat_gl_pas_ds_prorata</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span> \n\t<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n\t<span class=\"token keyword\">from</span> gl\n\t<span class=\"token keyword\">where</span> INSTR<span class=\"token punctuation\">(</span>multiappl_liste_brute<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span> gl2\n<span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> prorata\n\t<span class=\"token keyword\">on</span> gl2<span class=\"token punctuation\">.</span>fiscal_year\t<span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>fiscal_year\n\t<span class=\"token operator\">and</span> gl2<span class=\"token punctuation\">.</span>code_pci \t<span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>code_pci\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> fiscal_year<span class=\"token punctuation\">,</span>code_pci<span class=\"token punctuation\">,</span>altacct_descr<span class=\"token punctuation\">,</span>multiappl_array_brute<span class=\"token punctuation\">,</span>multiappl_liste_brute<span class=\"token punctuation\">,</span>event_nature_array_brute<span class=\"token punctuation\">,</span>multiappl_liste_prorata<span class=\"token punctuation\">,</span>multiappl_array_prorata<span class=\"token punctuation\">,</span>pci_in_prorata<span class=\"token punctuation\">,</span>all_appl_srce_in_prorata<span class=\"token punctuation\">,</span>\n\tcollect_set<span class=\"token punctuation\">(</span><span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> ARRAY_CONTAINS<span class=\"token punctuation\">(</span>multiappl_array_prorata<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> e<span class=\"token punctuation\">.</span>elem <span class=\"token keyword\">ELSE</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">END</span><span class=\"token punctuation\">)</span> source_g_ds_prorata<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> multiappl_liste_prorata <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> multiappl_array_brute<span class=\"token punctuation\">,</span> collect_set<span class=\"token punctuation\">(</span><span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> ARRAY_CONTAINS<span class=\"token punctuation\">(</span>multiappl_array_prorata<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">ELSE</span> e<span class=\"token punctuation\">.</span>elem <span class=\"token keyword\">END</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> source_gl_pas_ds_prorata<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> event_nature_liste_prorata <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> event_nature_array_brute<span class=\"token punctuation\">,</span> collect_set<span class=\"token punctuation\">(</span><span class=\"token keyword\">CASE</span> <span class=\"token keyword\">WHEN</span> ARRAY_CONTAINS<span class=\"token punctuation\">(</span>event_nature_array_prorata<span class=\"token punctuation\">,</span> e1<span class=\"token punctuation\">.</span>elem1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">THEN</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">ELSE</span> e1<span class=\"token punctuation\">.</span>elem1 <span class=\"token keyword\">END</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> event_nat_gl_pas_ds_prorata\n<span class=\"token keyword\">from</span> result\nLATERAL <span class=\"token keyword\">VIEW</span> EXPLODE<span class=\"token punctuation\">(</span>multiappl_array_brute<span class=\"token punctuation\">)</span> e <span class=\"token keyword\">as</span> elem\nLATERAL <span class=\"token keyword\">VIEW</span> EXPLODE<span class=\"token punctuation\">(</span>event_nature_array_brute<span class=\"token punctuation\">)</span> e1 <span class=\"token keyword\">as</span> elem1\n<span class=\"token comment\">--where fiscal_year = '2022' or fiscal_year = '2021' or fiscal_year = '2020'</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> fiscal_year<span class=\"token punctuation\">,</span>code_pci<span class=\"token punctuation\">,</span>altacct_descr<span class=\"token punctuation\">,</span>multiappl_array_brute<span class=\"token punctuation\">,</span>multiappl_liste_brute<span class=\"token punctuation\">,</span>event_nature_array_brute<span class=\"token punctuation\">,</span>multiappl_liste_prorata<span class=\"token punctuation\">,</span>event_nature_liste_prorata<span class=\"token punctuation\">,</span>multiappl_array_prorata<span class=\"token punctuation\">,</span>pci_in_prorata<span class=\"token punctuation\">,</span>all_appl_srce_in_prorata\n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> MATERIALIZED <span class=\"token keyword\">VIEW</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>multiapp_control_materialized_view REBUILD<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Trino View</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token operator\">or</span> <span class=\"token keyword\">replace</span> <span class=\"token keyword\">view</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>prorata_multiappl_control_brut_view_prorata_view SECURITY <span class=\"token keyword\">INVOKER</span> <span class=\"token keyword\">as</span> \n<span class=\"token comment\">--1 Comparaison base brute / base prorata sur PCI Multi application</span>\n<span class=\"token keyword\">with</span> gl <span class=\"token keyword\">as</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">select</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span>\n\t  \tcode_pci<span class=\"token punctuation\">,</span>\n\t  \taltacct_descr<span class=\"token punctuation\">,</span>\n\t\tARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_array_brute<span class=\"token punctuation\">,</span>\n\t\tARRAY_JOIN<span class=\"token punctuation\">(</span>ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> multiappl_liste_brute<span class=\"token punctuation\">,</span>\n\t\tARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> event_nature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_array_brute\n\t<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">select</span>\n\t\t\tuv<span class=\"token punctuation\">.</span>fiscal_year<span class=\"token punctuation\">,</span> \t\n\t\t\tcode_pci<span class=\"token punctuation\">,</span>\n\t\t\taltacct_descr<span class=\"token punctuation\">,</span>\n\t\t\tsource<span class=\"token punctuation\">,</span>\n\t\t\ttrim<span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">)</span> event_nature\n\t\t<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span> \n\t\t\t<span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span>\n\t\t\t\tfiscal_year<span class=\"token punctuation\">,</span>\n\t\t\t\tcast<span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">(</span>accounting_period<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> accounting_period<span class=\"token punctuation\">,</span> substr<span class=\"token punctuation\">(</span>accounting_period<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> accounting_period_2<span class=\"token punctuation\">,</span>\n\t\t\t\taltacct code_pci<span class=\"token punctuation\">,</span>\n\t\t\t\taltacct_descr<span class=\"token punctuation\">,</span>\n\t\t\t\tsource<span class=\"token punctuation\">,</span>\n\t\t\t\tevent_nature\n\t\t\t<span class=\"token keyword\">from</span> prd_suv_fni_a8401_glapf<span class=\"token punctuation\">.</span>suv_glapf \n\t \t\t<span class=\"token keyword\">where</span> business_unit\t<span class=\"token operator\">=</span> <span class=\"token string\">'G0001'</span> \n\t  \t  \t  <span class=\"token operator\">and</span> cast<span class=\"token punctuation\">(</span>fiscal_year <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> \t<span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t\t\t  <span class=\"token operator\">and</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> fiscal_year <span class=\"token operator\">=</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\t\t\t\t\t\tcast<span class=\"token punctuation\">(</span>accounting_period <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> \n\t\t\t\t\t\t<span class=\"token operator\">or</span> accounting_period <span class=\"token operator\">=</span> concat<span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> lpad<span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t\t\t\t\t<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\tcast<span class=\"token punctuation\">(</span>accounting_period <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">12</span>\n\t\t\t\t\t\t<span class=\"token operator\">or</span> accounting_period <span class=\"token operator\">=</span> <span class=\"token string\">'912'</span><span class=\"token punctuation\">)</span>\t\t\t  \n\t\t      <span class=\"token operator\">and</span> ledger \t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token string\">'ACTUAL7003'</span>\n\t  \t      <span class=\"token operator\">and</span> origine \t\t\t\t\t\t<span class=\"token operator\">!=</span> <span class=\"token string\">'QTZ'</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t\t      <span class=\"token operator\">and</span> source \t\t\t\t\t\t<span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'RVM'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MIG'</span><span class=\"token punctuation\">)</span>\n\t\t\t  <span class=\"token operator\">and</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t    <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'991'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'992'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'994'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'995'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--filtrer les comptes de bilan</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t\t\t\t  </span>\n\t\t\t  <span class=\"token comment\">--PNL &amp; BILAN</span>\n\t\t      <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>\n\t\t           substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t\t<span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'976'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'977'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'986'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'987'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'996'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'997'</span><span class=\"token punctuation\">)</span>\n\t\t        <span class=\"token operator\">or</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>        <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'979'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'989'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t\t  \n\t\t<span class=\"token punctuation\">)</span> uv\n\t\t<span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span> \n\t\t\t<span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> \n\t\t\t\tcast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span> fiscal_year<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> accounting_period<span class=\"token punctuation\">,</span>\n\t\t\t\tcomptepci_numero<span class=\"token punctuation\">,</span>\n\t\t\t\tcpt_codepcec \n\t\t\t<span class=\"token keyword\">from</span> prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_nsa_fnichartacc refe\n\t\t\t<span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span>\t\t\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">select</span> \n\t\t\t\t\t<span class=\"token function\">max</span><span class=\"token punctuation\">(</span>insert_date<span class=\"token punctuation\">)</span> max_insert_date<span class=\"token punctuation\">,</span>\n\t\t\t\t    cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fiscal_year   \n\t\t\t\t<span class=\"token keyword\">from</span> prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_nsa_fnichartacc\n\t\t\t\t<span class=\"token keyword\">where</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">)</span> refe_max\n\t\t\t\t<span class=\"token keyword\">on</span> refe<span class=\"token punctuation\">.</span>insert_date <span class=\"token operator\">=</span> refe_max<span class=\"token punctuation\">.</span>max_insert_date\n\t\t\t\t<span class=\"token operator\">and</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>refe<span class=\"token punctuation\">.</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> refe_max<span class=\"token punctuation\">.</span>fiscal_year\n\t\t\t<span class=\"token keyword\">where</span> cpt_codepcec <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'699'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'799'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'000000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'001000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'002000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'003000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'004000'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span> wi\n\t\t\t<span class=\"token keyword\">on</span> uv<span class=\"token punctuation\">.</span>fiscal_year \t\t\t<span class=\"token operator\">=</span> wi<span class=\"token punctuation\">.</span>fiscal_year\n\t\t\t<span class=\"token operator\">and</span> uv<span class=\"token punctuation\">.</span>code_pci \t\t\t<span class=\"token operator\">=</span> wi<span class=\"token punctuation\">.</span>comptepci_numero\n\t<span class=\"token punctuation\">)</span> uv2\n\t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span> \t\n\t\tcode_pci<span class=\"token punctuation\">,</span>\n\t\taltacct_descr\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nprorata <span class=\"token keyword\">as</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">select</span> \n\t    fiscal_year<span class=\"token punctuation\">,</span>\n\t    altacct <span class=\"token keyword\">as</span> code_pci<span class=\"token punctuation\">,</span>\n\t    ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_array_prorata<span class=\"token punctuation\">,</span>\n\t\tARRAY_JOIN<span class=\"token punctuation\">(</span>ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> multiappl_liste_prorata<span class=\"token punctuation\">,</span>\n\t\tARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_array_prorata<span class=\"token punctuation\">,</span>\n\t\tARRAY_JOIN<span class=\"token punctuation\">(</span>ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> event_nature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> event_nature_liste_prorata\n\t<span class=\"token keyword\">from</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>uv_proratavat\n\t<span class=\"token keyword\">where</span> cast<span class=\"token punctuation\">(</span>fiscal_year <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t  <span class=\"token operator\">and</span> origine \t\t<span class=\"token operator\">!=</span> <span class=\"token string\">'QTZ'</span>\n\t  <span class=\"token comment\">-- Avant retraitement</span>\n\t  <span class=\"token operator\">and</span> nom_retraitement <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span>\n\t  <span class=\"token comment\">--PNL &amp; BILAN</span>\n\t  <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'976'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'977'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'986'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'987'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'996'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'997'</span><span class=\"token punctuation\">)</span>\n\t   <span class=\"token operator\">or</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'979'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'989'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t  <span class=\"token operator\">and</span> source \t\t\t\t\t\t<span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'RVM'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MIG'</span><span class=\"token punctuation\">)</span>\n\t  <span class=\"token operator\">and</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t    <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'991'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'992'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'994'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'995'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--filtrer les comptes de bilan</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t\t\t   </span>\n\t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span> \n\t\taltacct \n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> gl2<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata<span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>prorata<span class=\"token punctuation\">.</span>code_pci <span class=\"token operator\">is</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OK'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'KO'</span><span class=\"token punctuation\">)</span> pci_in_prorata<span class=\"token punctuation\">,</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t<span class=\"token comment\">--if(gl2.multiappl_liste_brute = prorata.multiappl_liste_prorata, 'OK','KO') all_appl_srce_in_prorata,</span>\n\t<span class=\"token keyword\">case</span> \n\t\t<span class=\"token keyword\">when</span> gl2<span class=\"token punctuation\">.</span>multiappl_liste_brute <span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata <span class=\"token keyword\">then</span> <span class=\"token string\">'OK'</span>\n\t\t<span class=\"token keyword\">when</span> prorata<span class=\"token punctuation\">.</span>code_pci <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'N/A'</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token string\">'KO'</span>\n\t<span class=\"token keyword\">end</span> all_appl_srce_in_prorata<span class=\"token punctuation\">,</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t   </span>\n       array_intersect<span class=\"token punctuation\">(</span>gl2<span class=\"token punctuation\">.</span>multiappl_array_brute<span class=\"token punctuation\">,</span>prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">)</span> source_g_ds_prorata<span class=\"token punctuation\">,</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> gl2<span class=\"token punctuation\">.</span>multiappl_array_brute<span class=\"token punctuation\">,</span> array_except<span class=\"token punctuation\">(</span>gl2<span class=\"token punctuation\">.</span>multiappl_array_brute<span class=\"token punctuation\">,</span>prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> source_gl_pas_ds_prorata<span class=\"token punctuation\">,</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> prorata<span class=\"token punctuation\">.</span>event_nature_liste_prorata <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> gl2<span class=\"token punctuation\">.</span>event_nature_array_brute<span class=\"token punctuation\">,</span> array_except<span class=\"token punctuation\">(</span>gl2<span class=\"token punctuation\">.</span>event_nature_array_brute<span class=\"token punctuation\">,</span>prorata<span class=\"token punctuation\">.</span>event_nature_array_prorata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> event_nat_gl_pas_ds_prorata\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span> \n\t<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n\t<span class=\"token keyword\">from</span> gl\n\t<span class=\"token keyword\">where</span> strpos<span class=\"token punctuation\">(</span>multiappl_liste_brute<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span> gl2\n<span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> prorata\n\t<span class=\"token keyword\">on</span> gl2<span class=\"token punctuation\">.</span>fiscal_year\t<span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>fiscal_year\n\t<span class=\"token operator\">and</span> gl2<span class=\"token punctuation\">.</span>code_pci \t<span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>code_pci\n<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Starburst</h2>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> hive_default_lucid_dev<span class=\"token punctuation\">.</span>views_cache_storage <span class=\"token keyword\">WITH</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token string\">'/dev/suv/fni_a8401/suv_fni_a8401_accounting_granular/views_cache_storage/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SCHEMA</span> hive_default_lucid_dev<span class=\"token punctuation\">.</span>views_schema <span class=\"token keyword\">WITH</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">=</span> <span class=\"token string\">'/dev/suv/fni_a8401/suv_fni_a8401_accounting_granular/views_schemas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> MATERIALIZED <span class=\"token keyword\">VIEW</span> hive_default_lucid_dev<span class=\"token punctuation\">.</span>tax_data<span class=\"token punctuation\">.</span>prorata_multiappl_control_brut_view_prorata_view\n<span class=\"token keyword\">WITH</span> <span class=\"token punctuation\">(</span>\n   grace_period <span class=\"token operator\">=</span> <span class=\"token string\">'10.00m'</span><span class=\"token punctuation\">,</span>\n   max_import_duration <span class=\"token operator\">=</span> <span class=\"token string\">'30.00m'</span><span class=\"token punctuation\">,</span>\n   refresh_interval <span class=\"token operator\">=</span> <span class=\"token string\">'12.00h'</span><span class=\"token punctuation\">,</span>\n   run_as_invoker <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span>\n<span class=\"token keyword\">select</span> gl2<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata<span class=\"token punctuation\">,</span>\n    prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>prorata<span class=\"token punctuation\">.</span>code_pci <span class=\"token operator\">is</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OK'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'KO'</span><span class=\"token punctuation\">)</span> pci_in_prorata<span class=\"token punctuation\">,</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t<span class=\"token comment\">--if(gl2.multiappl_liste_brute = prorata.multiappl_liste_prorata, 'OK','KO') all_appl_srce_in_prorata,</span>\n\t<span class=\"token keyword\">case</span> \n\t\t<span class=\"token keyword\">when</span> gl2<span class=\"token punctuation\">.</span>multiappl_liste_brute <span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata <span class=\"token keyword\">then</span> <span class=\"token string\">'OK'</span>\n\t\t<span class=\"token keyword\">when</span> prorata<span class=\"token punctuation\">.</span>code_pci <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'N/A'</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token string\">'KO'</span>\n\t<span class=\"token keyword\">end</span> all_appl_srce_in_prorata<span class=\"token punctuation\">,</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t   </span>\n       array_intersect<span class=\"token punctuation\">(</span>gl2<span class=\"token punctuation\">.</span>multiappl_array_brute<span class=\"token punctuation\">,</span>prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">)</span> source_g_ds_prorata<span class=\"token punctuation\">,</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> prorata<span class=\"token punctuation\">.</span>multiappl_liste_prorata <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> gl2<span class=\"token punctuation\">.</span>multiappl_array_brute<span class=\"token punctuation\">,</span> array_except<span class=\"token punctuation\">(</span>gl2<span class=\"token punctuation\">.</span>multiappl_array_brute<span class=\"token punctuation\">,</span>prorata<span class=\"token punctuation\">.</span>multiappl_array_prorata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> source_gl_pas_ds_prorata<span class=\"token punctuation\">,</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> prorata<span class=\"token punctuation\">.</span>event_nature_liste_prorata <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> gl2<span class=\"token punctuation\">.</span>event_nature_array_brute<span class=\"token punctuation\">,</span> array_except<span class=\"token punctuation\">(</span>gl2<span class=\"token punctuation\">.</span>event_nature_array_brute<span class=\"token punctuation\">,</span>prorata<span class=\"token punctuation\">.</span>event_nature_array_prorata<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> event_nat_gl_pas_ds_prorata\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span> \n\t<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span>\n\t<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">select</span> \n            fiscal_year<span class=\"token punctuation\">,</span>\n            code_pci<span class=\"token punctuation\">,</span>\n            altacct_descr<span class=\"token punctuation\">,</span>\n            ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_array_brute<span class=\"token punctuation\">,</span>\n            ARRAY_JOIN<span class=\"token punctuation\">(</span>ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> multiappl_liste_brute<span class=\"token punctuation\">,</span>\n            ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> event_nature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_array_brute\n        <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">select</span>\n                uv<span class=\"token punctuation\">.</span>fiscal_year<span class=\"token punctuation\">,</span> \t\n                code_pci<span class=\"token punctuation\">,</span>\n                altacct_descr<span class=\"token punctuation\">,</span>\n                source<span class=\"token punctuation\">,</span>\n                trim<span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">)</span> event_nature\n            <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span> \n                <span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span>\n                    fiscal_year<span class=\"token punctuation\">,</span>\n                    cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">(</span>accounting_period<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> accounting_period<span class=\"token punctuation\">,</span> substr<span class=\"token punctuation\">(</span>accounting_period<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> accounting_period_2<span class=\"token punctuation\">,</span>\n                    altacct code_pci<span class=\"token punctuation\">,</span>\n                    altacct_descr<span class=\"token punctuation\">,</span>\n                    source<span class=\"token punctuation\">,</span>\n                    event_nature\n                <span class=\"token keyword\">from</span> prd_suv_fni_a8401_glapf<span class=\"token punctuation\">.</span>suv_glapf \n                <span class=\"token keyword\">where</span> business_unit\t<span class=\"token operator\">=</span> <span class=\"token string\">'G0001'</span> \n                <span class=\"token operator\">and</span> cast<span class=\"token punctuation\">(</span>fiscal_year <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> \t<span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">and</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> fiscal_year <span class=\"token operator\">=</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n                            cast<span class=\"token punctuation\">(</span>accounting_period <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> \n                            <span class=\"token operator\">or</span> accounting_period <span class=\"token operator\">=</span> concat<span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> lpad<span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n                        <span class=\"token punctuation\">,</span>\n                            cast<span class=\"token punctuation\">(</span>accounting_period <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">between</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">12</span>\n                            <span class=\"token operator\">or</span> accounting_period <span class=\"token operator\">=</span> <span class=\"token string\">'912'</span><span class=\"token punctuation\">)</span>\t\t\t  \n                <span class=\"token operator\">and</span> ledger \t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token string\">'ACTUAL7003'</span>\n                <span class=\"token operator\">and</span> origine \t\t\t\t\t\t<span class=\"token operator\">!=</span> <span class=\"token string\">'QTZ'</span>\n    <span class=\"token comment\">--UPDATE JMC 20230317</span>\n                <span class=\"token operator\">and</span> source \t\t\t\t\t\t<span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'RVM'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MIG'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">and</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t    <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'991'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'992'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'994'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'995'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--filtrer les comptes de bilan</span>\n    <span class=\"token comment\">--END UPDATE JMC 20230317\t\t\t\t  </span>\n                <span class=\"token comment\">--PNL &amp; BILAN</span>\n                <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>\n                    substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t\t<span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'976'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'977'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'986'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'987'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'996'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'997'</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">or</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>        <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'979'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'989'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t\t  \n            <span class=\"token punctuation\">)</span> uv\n            <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span> \n                <span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> \n                    cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span> fiscal_year<span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">month</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> accounting_period<span class=\"token punctuation\">,</span>\n                    comptepci_numero<span class=\"token punctuation\">,</span>\n                    cpt_codepcec \n                <span class=\"token keyword\">from</span> prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_nsa_fnichartacc refe\n                <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span>\t\t\t\t\t\t\n                    <span class=\"token keyword\">select</span> \n                        <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>insert_date<span class=\"token punctuation\">)</span> max_insert_date<span class=\"token punctuation\">,</span>\n                        cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fiscal_year   \n                    <span class=\"token keyword\">from</span> prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_nsa_fnichartacc\n                    <span class=\"token keyword\">where</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span> refe_max\n                    <span class=\"token keyword\">on</span> refe<span class=\"token punctuation\">.</span>insert_date <span class=\"token operator\">=</span> refe_max<span class=\"token punctuation\">.</span>max_insert_date\n                    <span class=\"token operator\">and</span> cast<span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>refe<span class=\"token punctuation\">.</span>insert_date <span class=\"token keyword\">as</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> refe_max<span class=\"token punctuation\">.</span>fiscal_year\n                <span class=\"token keyword\">where</span> cpt_codepcec <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'699'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'799'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'000000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'001000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'002000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'003000'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'004000'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span> wi\n                <span class=\"token keyword\">on</span> uv<span class=\"token punctuation\">.</span>fiscal_year \t\t\t<span class=\"token operator\">=</span> wi<span class=\"token punctuation\">.</span>fiscal_year\n                <span class=\"token operator\">and</span> uv<span class=\"token punctuation\">.</span>code_pci \t\t\t<span class=\"token operator\">=</span> wi<span class=\"token punctuation\">.</span>comptepci_numero\n        <span class=\"token punctuation\">)</span> uv2\n        <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \n            fiscal_year<span class=\"token punctuation\">,</span> \t\n            code_pci<span class=\"token punctuation\">,</span>\n            altacct_descr\n    <span class=\"token punctuation\">)</span> gl\n\t<span class=\"token keyword\">where</span> strpos<span class=\"token punctuation\">(</span>multiappl_liste_brute<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span> gl2\n<span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">select</span> \n\t    fiscal_year<span class=\"token punctuation\">,</span>\n\t    altacct <span class=\"token keyword\">as</span> code_pci<span class=\"token punctuation\">,</span>\n\t    ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> multiappl_array_prorata<span class=\"token punctuation\">,</span>\n\t\tARRAY_JOIN<span class=\"token punctuation\">(</span>ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> multiappl_liste_prorata<span class=\"token punctuation\">,</span>\n\t\tARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>event_nature<span class=\"token punctuation\">,</span><span class=\"token string\">'#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> event_nature_array_prorata<span class=\"token punctuation\">,</span>\n\t\tARRAY_JOIN<span class=\"token punctuation\">(</span>ARRAY_SORT<span class=\"token punctuation\">(</span>ARRAY_AGG<span class=\"token punctuation\">(</span><span class=\"token keyword\">distinct</span> event_nature<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">)</span> event_nature_liste_prorata\n\t<span class=\"token keyword\">from</span> prd_uv_ptv_a8688_proratavat<span class=\"token punctuation\">.</span>uv_proratavat\n\t<span class=\"token keyword\">where</span> cast<span class=\"token punctuation\">(</span>fiscal_year <span class=\"token keyword\">as</span> <span class=\"token keyword\">integer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">year</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">current_date</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t  <span class=\"token operator\">and</span> origine \t\t<span class=\"token operator\">!=</span> <span class=\"token string\">'QTZ'</span>\n\t  <span class=\"token comment\">-- Avant retraitement</span>\n\t  <span class=\"token operator\">and</span> nom_retraitement <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span>\n\t  <span class=\"token comment\">--PNL &amp; BILAN</span>\n\t  <span class=\"token operator\">and</span> <span class=\"token punctuation\">(</span>substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'976'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'977'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'986'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'987'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'996'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'997'</span><span class=\"token punctuation\">)</span>\n\t   <span class=\"token operator\">or</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'979'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'989'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'999'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">--UPDATE JMC 20230317</span>\n\t  <span class=\"token operator\">and</span> source \t\t\t\t\t\t<span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'RVM'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MIG'</span><span class=\"token punctuation\">)</span>\n\t  <span class=\"token operator\">and</span> substr<span class=\"token punctuation\">(</span>altacct<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \t    <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'991'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'992'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'994'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'995'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">--filtrer les comptes de bilan</span>\n<span class=\"token comment\">--END UPDATE JMC 20230317\t\t\t   </span>\n\t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \n\t\tfiscal_year<span class=\"token punctuation\">,</span> \n\t\taltacct \n<span class=\"token punctuation\">)</span> prorata\n\t<span class=\"token keyword\">on</span> gl2<span class=\"token punctuation\">.</span>fiscal_year\t<span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>fiscal_year\n\t<span class=\"token operator\">and</span> gl2<span class=\"token punctuation\">.</span>code_pci \t<span class=\"token operator\">=</span> prorata<span class=\"token punctuation\">.</span>code_pci\n<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">ALTER</span> MATERIALIZED <span class=\"token keyword\">VIEW</span> hive_default_lucid_dev<span class=\"token punctuation\">.</span>tax_data<span class=\"token punctuation\">.</span>prorata_multiappl_control_brut_view_prorata_view <span class=\"token keyword\">SET</span> PROPERTIES partitioning <span class=\"token operator\">=</span> ARRAY<span class=\"token punctuation\">[</span><span class=\"token string\">'fiscal_year'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nREFRESH MATERIALIZED <span class=\"token keyword\">VIEW</span> hive_default_lucid_dev<span class=\"token punctuation\">.</span>tax_data<span class=\"token punctuation\">.</span>prorata_multiappl_control_brut_view_prorata_view<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token string\">\"system\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"materialized_views\"</span> <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Resources</h2>"}},{"node":{"frontmatter":{"title":"SonarQube - Green coding sur les codes Big Data","description":"Augmentation la qualite de code sur les projects Scala/Spark en appliquant TDD et SonarQube.","slug":"/pensieve/green-coding/","date":"2022-11-02T00:00:00.000Z","tags":["TDD","SonarQube","Unittest","ScalaTest","Coverage"],"draft":false},"html":""}},{"node":{"frontmatter":{"title":"Migration Systeme Comptabilite","description":"Dans le cadre de migration entre Societe Generale et Credit du Nord, je m'occupe sur la partie du projet pour restitution de la data afin de control les phrase de la migration","slug":"/pensieve/yoga","date":"2022-11-01T00:00:00.000Z","tags":["Datalake","Finance/Comptable","Control data quality"],"draft":false},"html":"<h2>Architecture</h2>\n<p><img src=\"./yoga_architecture.png\" alt=\"Architecture de projet\" title=\"architecture\"></p>\n<h2>Data Flow</h2>\n<p><img src=\"./pipelines.png\" alt=\"Data flow\" title=\"pipeline jobs\"></p>\n<h2>Control Data</h2>\n<h3>Control KPI</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/*****************************\nPROD - KPI YOGA\n\nmaj : 01/03/2023\n******************************/</span>\n\n<span class=\"token comment\">--Change the phase value </span>\n<span class=\"token variable\">@set</span> phase <span class=\"token operator\">=</span> <span class=\"token string\">'BR2'</span>\n\n<span class=\"token keyword\">with</span> rcc_kpi <span class=\"token keyword\">as</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> \n  \tcode_irt_bdf<span class=\"token punctuation\">,</span> label_irt_bdf<span class=\"token punctuation\">,</span> \n  \tphase<span class=\"token punctuation\">,</span>\n  \t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> nb_cnt_total<span class=\"token punctuation\">,</span>\n  \t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> flag_cnt_found <span class=\"token operator\">=</span> <span class=\"token string\">'Y'</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> nb_ctn_rapp<span class=\"token punctuation\">,</span>\n  \t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> flag_cnt_amount_matched <span class=\"token operator\">=</span> <span class=\"token string\">'Y'</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> nb_ctn_reconl<span class=\"token punctuation\">,</span>\n  \t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> flag_dep_pci <span class=\"token operator\">=</span> <span class=\"token string\">'P'</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> nb_ctn_deport\n\t<span class=\"token keyword\">from</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_suv_fni_a8401_accounting_granular<span class=\"token punctuation\">.</span>suv_rcc_yoga\n  \t<span class=\"token keyword\">where</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n  \t<span class=\"token operator\">and</span> phase <span class=\"token operator\">=</span> ${phase}\n  \t<span class=\"token operator\">and</span> flag_pci_remove <span class=\"token operator\">=</span> <span class=\"token string\">'N'</span> \n  \t<span class=\"token operator\">and</span> <span class=\"token keyword\">coalesce</span><span class=\"token punctuation\">(</span>code_irt_bdf<span class=\"token punctuation\">,</span> <span class=\"token string\">'AAAAA'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'A0021'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A1787'</span><span class=\"token punctuation\">)</span>\n  \t<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> code_irt_bdf<span class=\"token punctuation\">,</span> label_irt_bdf<span class=\"token punctuation\">,</span> phase\n  \t<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> label_irt_bdf <span class=\"token keyword\">asc</span> nulls <span class=\"token keyword\">first</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span>\n  code_irt_bdf<span class=\"token punctuation\">,</span> label_irt_bdf<span class=\"token punctuation\">,</span>phase<span class=\"token punctuation\">,</span>\n  nb_cnt_total<span class=\"token punctuation\">,</span> nb_ctn_rapp<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>nb_ctn_rapp <span class=\"token keyword\">as</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> cast<span class=\"token punctuation\">(</span>nb_cnt_total <span class=\"token keyword\">as</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token keyword\">as</span> pct_cnt_rapp<span class=\"token punctuation\">,</span>\n  nb_ctn_reconl<span class=\"token punctuation\">,</span>\n  <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>cast<span class=\"token punctuation\">(</span>nb_ctn_reconl <span class=\"token keyword\">as</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> cast<span class=\"token punctuation\">(</span>nb_cnt_total <span class=\"token keyword\">as</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token keyword\">as</span> pct_cnt_reconl<span class=\"token punctuation\">,</span>\n  nb_ctn_rapp <span class=\"token operator\">-</span> nb_ctn_reconl <span class=\"token keyword\">as</span> nb_ctn_rapp_nreconl<span class=\"token punctuation\">,</span>\n  nb_ctn_deport<span class=\"token punctuation\">,</span>\n  nb_cnt_total <span class=\"token operator\">-</span> nb_ctn_rapp <span class=\"token keyword\">as</span> nb_ctn_nrapp\n<span class=\"token keyword\">from</span> rcc_kpi\n<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Control integration du SO</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/*****************************\nControle Transco \n\nmaj : 01/03/2023\n******************************/</span>\n\n<span class=\"token comment\">--Change the phase value </span>\n<span class=\"token variable\">@set</span> phase <span class=\"token operator\">=</span> <span class=\"token string\">'BR2'</span>\n\n<span class=\"token comment\">/***Controle SRV ***/</span>\n<span class=\"token keyword\">select</span> cd_banque_origin<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">from</span> ${hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd}_srv_fni_a8401_fda_datastructure<span class=\"token punctuation\">.</span>yoga_contracts_transco\n<span class=\"token keyword\">where</span> phase <span class=\"token operator\">=</span> ${phase}\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> cd_banque_origin<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***Controle SUV ***/</span>\n\n<span class=\"token comment\">-- Detail par SO</span>\n<span class=\"token keyword\">select</span> cd_irt_so_cible<span class=\"token punctuation\">,</span> label_irt<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> trsc<span class=\"token punctuation\">.</span>insert_date\n<span class=\"token keyword\">from</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_suv_fni_a8401_accounting_granular<span class=\"token punctuation\">.</span>suv_contracts_transco_yoga trsc\n<span class=\"token keyword\">left</span> <span class=\"token keyword\">outer</span> <span class=\"token keyword\">join</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_srv_fni_a8401_fda_datastructure<span class=\"token punctuation\">.</span>sv_fni_ref_irt irt <span class=\"token keyword\">on</span> <span class=\"token punctuation\">(</span>cd_irt_so_cible <span class=\"token operator\">=</span> irt<span class=\"token punctuation\">.</span>code_irt<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">where</span> phase <span class=\"token operator\">=</span> ${phase} \n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> cd_irt_so_cible<span class=\"token punctuation\">,</span> label_irt<span class=\"token punctuation\">,</span> trsc<span class=\"token punctuation\">.</span>insert_date\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Par Banque</span>\n<span class=\"token keyword\">select</span> cd_banque_origin<span class=\"token punctuation\">,</span> trsc<span class=\"token punctuation\">.</span>insert_date<span class=\"token punctuation\">,</span> phase<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">from</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_suv_fni_a8401_accounting_granular<span class=\"token punctuation\">.</span>suv_contracts_transco_yoga trsc\n<span class=\"token keyword\">where</span> phase <span class=\"token operator\">=</span> ${phase}\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> cd_banque_origin<span class=\"token punctuation\">,</span> trsc<span class=\"token punctuation\">.</span>insert_date<span class=\"token punctuation\">,</span> phase\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Control data daily pour des jours ouvres</h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/*****************************\nPROD des SRV YOGA\n\nmaj : 01/03/2023\n******************************/</span>\n\n<span class=\"token variable\">@set</span> env_ins_dt <span class=\"token operator\">=</span> <span class=\"token string\">'2023-05-13'</span>\n\n<span class=\"token comment\">--Controle des CRE recus par SO</span>\n<span class=\"token keyword\">select</span> \ncgxmj<span class=\"token punctuation\">.</span>insert_date<span class=\"token punctuation\">,</span> \ncgxmj<span class=\"token punctuation\">.</span>cdirt <span class=\"token keyword\">as</span> IRT<span class=\"token punctuation\">,</span>\nlabel_irt<span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> cgxmj<span class=\"token punctuation\">.</span>cdggpn <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'07141'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07142'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07143'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07144'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07145'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07146'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07147'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07148'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07149'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'YOGA'</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'RCGG'</span> <span class=\"token keyword\">end</span> <span class=\"token keyword\">as</span> Type_CRE<span class=\"token punctuation\">,</span>\n<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Nbre\n<span class=\"token keyword\">from</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_cgxmj_bis cgxmj\n<span class=\"token keyword\">left</span> <span class=\"token keyword\">outer</span> <span class=\"token keyword\">join</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_srv_nsa_a2274_nosica<span class=\"token punctuation\">.</span>sv_cgxmd cgxmd <span class=\"token keyword\">on</span> <span class=\"token punctuation\">(</span>cgxmj<span class=\"token punctuation\">.</span>aggid <span class=\"token operator\">=</span> cgxmd<span class=\"token punctuation\">.</span>aggid \n<span class=\"token operator\">and</span> cgxmj<span class=\"token punctuation\">.</span>nuecr5 <span class=\"token operator\">=</span> cgxmd<span class=\"token punctuation\">.</span>nuecr5 \n<span class=\"token operator\">and</span> cgxmj<span class=\"token punctuation\">.</span>nulimv <span class=\"token operator\">=</span> cgxmd<span class=\"token punctuation\">.</span>nulimv<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">left</span> <span class=\"token keyword\">outer</span> <span class=\"token keyword\">join</span> hive_default_lucid_prd<span class=\"token punctuation\">.</span>prd_srv_fni_a8401_fda_datastructure<span class=\"token punctuation\">.</span>sv_fni_ref_irt irt <span class=\"token keyword\">on</span> <span class=\"token punctuation\">(</span>code_irt <span class=\"token operator\">=</span> cgxmj<span class=\"token punctuation\">.</span>cdirt<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">where</span> \ncgxmj<span class=\"token punctuation\">.</span>insert_date <span class=\"token operator\">>=</span> ${env_ins_dt}\n<span class=\"token comment\">--Uncomment his filter to keep only the CRE YOGA</span>\n<span class=\"token comment\">--and cgxmj.cdggpn in ('07141','07142','07143','07144','07145','07146','07147','07148','07149')</span>\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> \ncgxmj<span class=\"token punctuation\">.</span>insert_date<span class=\"token punctuation\">,</span> \ncgxmj<span class=\"token punctuation\">.</span>cdirt<span class=\"token punctuation\">,</span>\nlabel_irt<span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> cgxmj<span class=\"token punctuation\">.</span>cdggpn <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'07141'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07142'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07143'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07144'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07145'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07146'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07147'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07148'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'07149'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span> <span class=\"token string\">'YOGA'</span> <span class=\"token keyword\">else</span> <span class=\"token string\">'RCGG'</span> <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token number\">4</span> <span class=\"token keyword\">desc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token keyword\">asc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"node":{"frontmatter":{"title":"BI Data Contract","description":"Implemente data quality et data tracking pour le reporting sur Cube SSAS.","slug":"/pensieve/data-contract","date":"2022-09-10T00:00:00.000Z","tags":["dbt","trino","sqlserver"],"draft":false},"html":"<p>Utilisant dbt audit-helper pour rassurer la data quality et le reporting fiable pur les consommateurs.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/6e49929788bdf2f8a9343500a06e4427/e378c/BIDataContract.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 45.142857142857146%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'180\\'%20viewBox=\\'0%200%20400%20180\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%207v6h5l6%201c0%201%202%202%203%201%201%200%202-5%200-5l-1-5V0H0v7m399%2082v90H199L0%20180h200l200-1V89l-1-89v89M65%209c-5%202-5%203-5%2034v28l3%203%203%203h26l26%201%203-3%202-3V14l-2-3-3-2-25-1-28%201m0%202l-2%203v58c3%205%2055%206%2058%201%201-2%200-59-2-61-1-2-49-3-54-1m3%207c-1%200-2%201-2%203l-1%202h26l25%201v-3c0-3%200-3-5-3a26258%2026258%200%2001-43%200m306%2023c-1%201-1%201%201%201l7%202%205%202v12l-5%202c-5%202-5%203-5-1%200-1%200-2-1-1l-1%202c1%202%201%202-5%200-4-2-5-3-5-6%200-5%201-8%203-7%202%200%202%200%201-1s-1-1%202-2c3-2%201-2-4-1-3%202-3%202-3%208%200%208%200%208%207%2011l5%202%206-2%206-2V45l-6-3c-6-2-6-2-8-1M83%2048l-1%204v4H65l7%201h10v3c-1%203%201%205%205%205s7-2%207-4h5l1-3c0-1%200-2-3-2h-3l2-1c3%200%205-2%202-2h-6c-2%200-3%201-3%204s1%204%202%204c2%200%201%202-1%202-3%201-7%200-7-1s1-2%203-1h2l-2-2-3-2h5l-2-2c-4-1-4-3%200-3l8-1c0-3-8-5-11-3m75%2020l-1%203v2h50v-5l-25-1-24%201m75%202v3h50v2c1%201%201%200%201-2v-5l-26-1h-25v3m93%2014c1%202%201%202-1%203-3%201-3%201%209%205l8%204%206%201%206-1c0-2-8-8-9-7l-7-2-8-2%2016%207c1-1%203%200%203%201%202%202%202%202%200%202h-2l-1-1-3-1-8-3c-8-2-9-2-7-4s2-2%200-2h-2m42%204l-1%209v8h18V87h-8l-9%201M60%2099v8H18v-7l-1-6v14h7a256%20256%200%200124%201h12v20c1%2027-2%2025%2031%2024l27-1H93c-35%200-31%203-32-23v-20h9c11%200%2011%200%2013%202%201%202%2015%203%2017%201l-1-16-8-1c-9%200-9%200-9%208v4H61v-8l-1-7v7m24-2l1%201%204%201-2%201c-3%200-3%200-3%206v5h9v-4c0-4%201-5%203-5%206-1%203-3-4-2l-2-1%205-1%204-1H84m-17%2027l-1%203v2h50v3c1%201%201%200%201-3v-5l-25-1-25%201\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Data Contract pour BI\"\n        title=\"Data Contract pour BI\"\n        src=\"/static/6e49929788bdf2f8a9343500a06e4427/39600/BIDataContract.png\"\n        srcset=\"/static/6e49929788bdf2f8a9343500a06e4427/1aaec/BIDataContract.png 175w,\n/static/6e49929788bdf2f8a9343500a06e4427/98287/BIDataContract.png 350w,\n/static/6e49929788bdf2f8a9343500a06e4427/39600/BIDataContract.png 700w,\n/static/6e49929788bdf2f8a9343500a06e4427/57cd1/BIDataContract.png 1050w,\n/static/6e49929788bdf2f8a9343500a06e4427/4af54/BIDataContract.png 1400w,\n/static/6e49929788bdf2f8a9343500a06e4427/e378c/BIDataContract.png 1781w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n  </a>\n    </span></p>"}},{"node":{"frontmatter":{"title":"Spark - Dynamique partition overwrite data","description":"Overwrite data par partition.","slug":"/pensieve/spark/dynamique-overwrite","date":"2021-06-04T00:00:00.000Z","tags":["spark","partition","scala"],"draft":false},"html":"<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/dcadb76fb492ce728dd7d725fb8ece2a/a71f4/Non-dynamique-overwrite-partition.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 45.142857142857146%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'180\\'%20viewBox=\\'0%200%20400%20180\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M17%2025l-1%202-1%202v2l1%203%201%202h18l19-1%201-6v-4l-19-1-19%201m110%2075l1%2074a2626%202626%200%2000-1-74m34-73l-1%203-1%202-1%201%201%201%201%202%201%203h38v-6l-1-6h-37m108%2073a1037%201037%200%20002%200%201037%201037%200%2000-2%200M26%2049c-10%205-10%205%201%2010l8%204%208-4%2010-4%202-1-1-1-10-4-9-4-9%204m269%200l-8%205%2017%208c1%201%2018-7%2018-8l-18-9-9%204M28%2075c-10%201-15%204-12%208%206%206%2035%205%2035-2%200-2-5-5-9-5-7-2-9-2-14-1m147%200c-8%201-14%203-14%206%200%208%2028%209%2037%201%202-1%202-1%201-2-7-5-12-6-24-5m116%2020c-1%201-2%2014-1%2015%202%201%203%200%202-1-2-2-1-3%201-1%203%202%205%203%204%201v-1l1%201%202%201h3l-6%201%2011%201c16%200%2017%200%2018-2%201-1%202-3%201-4l1-2%201-2-2-2c0-4%200-4-1-3l-1-1c1-2-31-3-34-1M21%20131v10h19c2-1%202-3%202-6v-4l-10-1-11%201m145%202l-1%208v3h21v-11h-20m127%200l-1%207v6h15v-13l-7-1-7%201M26%20146l-5%203%205%203%206%203%205-3%205-3-5-3-5-3-6%203m142%204c-4%202-4%206%200%209%204%202%2012%202%2016-1l5-2%202-1-2-1-5-2c-4-3-10-4-16-2m127%203l-5%203%205%203c5%202%205%202%209%200%207-3%208-3%202-6-6-4-5-4-11%200m-269%204c-3%200-6%204-5%206%201%205%2013%206%2018%203l6-3%202-1-3-1-3-1c0-2-9-4-15-3\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Image Alt\"\n        title=\"Image Alt\"\n        src=\"/static/dcadb76fb492ce728dd7d725fb8ece2a/39600/Non-dynamique-overwrite-partition.png\"\n        srcset=\"/static/dcadb76fb492ce728dd7d725fb8ece2a/1aaec/Non-dynamique-overwrite-partition.png 175w,\n/static/dcadb76fb492ce728dd7d725fb8ece2a/98287/Non-dynamique-overwrite-partition.png 350w,\n/static/dcadb76fb492ce728dd7d725fb8ece2a/39600/Non-dynamique-overwrite-partition.png 700w,\n/static/dcadb76fb492ce728dd7d725fb8ece2a/57cd1/Non-dynamique-overwrite-partition.png 1050w,\n/static/dcadb76fb492ce728dd7d725fb8ece2a/4af54/Non-dynamique-overwrite-partition.png 1400w,\n/static/dcadb76fb492ce728dd7d725fb8ece2a/a71f4/Non-dynamique-overwrite-partition.png 2441w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n  </a>\n    </span></p>\n<p>Quand -t-on essaie d'utiliser dynamique partition mode pour écrire des données avec ces deux methods:</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\">dataframe<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"partitionOverwriteMode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dynamic\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>ou ajoute dans la configuration de <code class=\"language-text\">SparkSession</code></p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\">sparkSession<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>set<span class=\"token punctuation\">(</span><span class=\"token string\">\"spark.sql.sources.partitionOverwriteMode\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dynamic\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>potentiellement, on rencontre ce genre d'erreur:</p>\n<blockquote>\n<p>Exception: Caused by: java.io.IOException: PathOutputCommitProtocol does not support dynamicPartitionOverwrite</p>\n</blockquote>\n<p>Il nous suffit desactiver <code class=\"language-text\">S3 committer</code> comme ci-dessous: (si vous êtes sur Cloudera)</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\">sparkSession<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>set<span class=\"token punctuation\">(</span><span class=\"token string\">\"spark.sql.sources.commitProtocolClass\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"org.apache.spark.sql.execution.datasources.SQLHadoopMapReduceCommitProtocol\"</span><span class=\"token punctuation\">)</span>\n\nsparkSession<span class=\"token punctuation\">.</span>conf<span class=\"token punctuation\">.</span>set<span class=\"token punctuation\">(</span><span class=\"token string\">\"spark.cloudera.s3_committers.enabled\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/44e6d242bd671f7ef96d8d42573a5ede/a71f4/Dynamique-overwrite-partition.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 45.142857142857146%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'180\\'%20viewBox=\\'0%200%20400%20180\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M141%2027l-11%206%2011%205%2012%206%2010-5%2010-6-10-6-10-6-12%206m112-3c-7%201-14%204-15%206l-2%202h-3c-3%200-3%200%200%201%202%201%206%202%207%204%204%204%205%204%2019%204%2010%200%2016-1%2020-4%2010-7-6-15-26-13m68%200c-1%201-2%2016%200%2017h9l7%201%201%201h2c0-2%202-2%208-2s8%200%209-2c2-2%202-2%201-3v-6c2-1-2-6-5-6h-32M37%2026v9l1%206h9l11%201h13l5-1h5V26l-1-2H38l-1%202M22%20131l-1%205v5h7c12%201%2014%200%2014-6v-4l-10-1-10%201m143%200c-1%202%200%209%201%2010h19l1-6v-4l-10-1-11%201m128%202l-1%207v6h11l4-1v-12l-7-1-7%201M25%20146c-5%203-5%203%201%206%205%203%206%203%2011%200s5-3%200-6c-6-2-6-2-12%200m143%206c-6%204-2%209%208%209l8-2c1-2%204-3%205-3%202-1%202-1%200-1l-5-2c-4-4-12-4-16-1m125%202c-5%203-5%203%201%206l6%203%204-2c6-3%206-4%200-7-5-2-5-2-11%200m-269%204l-3%204c-1%205%2012%207%2018%203l6-2c1%200%202%200%201-1l-2-1-4-2c-4-2-12-3-16-1\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Image\"\n        title=\"Image\"\n        src=\"/static/44e6d242bd671f7ef96d8d42573a5ede/39600/Dynamique-overwrite-partition.png\"\n        srcset=\"/static/44e6d242bd671f7ef96d8d42573a5ede/1aaec/Dynamique-overwrite-partition.png 175w,\n/static/44e6d242bd671f7ef96d8d42573a5ede/98287/Dynamique-overwrite-partition.png 350w,\n/static/44e6d242bd671f7ef96d8d42573a5ede/39600/Dynamique-overwrite-partition.png 700w,\n/static/44e6d242bd671f7ef96d8d42573a5ede/57cd1/Dynamique-overwrite-partition.png 1050w,\n/static/44e6d242bd671f7ef96d8d42573a5ede/4af54/Dynamique-overwrite-partition.png 1400w,\n/static/44e6d242bd671f7ef96d8d42573a5ede/a71f4/Dynamique-overwrite-partition.png 2441w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n  </a>\n    </span></p>"}},{"node":{"frontmatter":{"title":"Continuous Integration & Continuous Delivery","description":"CICD for Scala/Spark data pipeline.","slug":"/pensieve/cicd","date":"2021-05-02T00:00:00.000Z","tags":["maven","ansible","jenkins"],"draft":false},"html":""}},{"node":{"frontmatter":{"title":"CRUD Api Swagger Informatica","description":"Api for Informatica's Admin","slug":"/pensieve/api-informatica","date":"2020-04-21T00:00:00.000Z","tags":["API","Oauth2"],"draft":false},"html":"<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/b102d73f84e0df61ca5c811cb2d4e440/65657/api_architecture.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 53.714285714285715%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'216\\'%20viewBox=\\'0%200%20400%20216\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M3%20109v102h66V6H3v103m120-73v9h16v12h-20l-20%201h41V46l8-1h8V27l-1%208v9h-31v-9l-1-8v9m39%200v9l1-9v-8h27v16h-14c-10%200-12%200-7%201l7%201v15h-21l-21%201h42v29h-10V66h-64v19c0%2017%200%2019-2%2019v1c2%200%202%201%202%206v6h64v-12h8l8-1h-16V92h11V62h29l30-1h-59v-7l1-6%2011-1%2011-1h-11c-10%200-10%200-5-1h7V27h-29v9m67%2038h46v58h-46l-45%201h92V73h-92l45%201M108%2094v16h52V79l-26-1h-26v16m82-9l-1%203-2%201h2l1%203v3h24l25-1c2%200%202-2%202-6v-5h-51v2m24%203v3h23v-6h-23v3m16%2010l-20%201c-21%200-21%200-21%208v5h77V99h-17l-18-1h-1m-21%208v3h28v-7h-28v4m30%200v3h21v-7h-21v4m139%203h18v24h-18c-10%200-14%201-9%201%207%200%209%200%209%202l1%201%201-1c0-2%202-2%209-2h8v-26h-36l17%201m-169%208l-1%207v6h63v-15h-31c-27%200-31%200-31%202m19%206v4h19v-9h-19v5m20%200v4h18v-9h-18v5m-92%2037l-30%201-1%206v7h84v-14h-53m-6%207v5h48v-9l-24-1h-24v5m113%2029l-1%204v2l1%204v3h52v-16h-52v3m1%205v7h50v-14h-50v7\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"API Architecture\"\n        title=\"architecture\"\n        src=\"/static/b102d73f84e0df61ca5c811cb2d4e440/39600/api_architecture.png\"\n        srcset=\"/static/b102d73f84e0df61ca5c811cb2d4e440/1aaec/api_architecture.png 175w,\n/static/b102d73f84e0df61ca5c811cb2d4e440/98287/api_architecture.png 350w,\n/static/b102d73f84e0df61ca5c811cb2d4e440/39600/api_architecture.png 700w,\n/static/b102d73f84e0df61ca5c811cb2d4e440/57cd1/api_architecture.png 1050w,\n/static/b102d73f84e0df61ca5c811cb2d4e440/65657/api_architecture.png 1339w\"\n        sizes=\"(max-width: 700px) 100vw, 700px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n  </a>\n    </span></p>\n<p>Api heberge sur 2 zone de securite different, c'est pour ca, nous avons 2 workers qui vont deployer differenement, un sur docker et un autre sur la VM Cloud (qui necessite d'avoir l'ouverture de route sur GBIS)</p>\n<p>Api a ete developpe par Python version 3.6 en utilisant des libraries: <code class=\"language-text\">requirements.txt</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">flask-restplus==0.11.0\npytest==3.8.2\npytest-mock==1.10.0\nfaker==0.9.0\nredis==3.2.0\ncelery==4.3.0\nflower==0.9.2\nansible==2.7.4\ngunicorn==19.9.0\nsg-cacert-file==2.0.2</code></pre></div>\n<p>Structuration du projet:\n.</p>\n<ul>\n<li>ETLaaS_GCR_async\n<ul>\n<li>app\n<ul>\n<li>ansible\n<ul>\n<li>inventory</li>\n<li>playbook</li>\n</ul>\n</li>\n<li>apis\n<ul>\n<li>authentication.py</li>\n<li>grchost.py</li>\n<li>health_check.py</li>\n<li>informatica.py</li>\n<li>jobs.py</li>\n<li>uuid.py</li>\n</ul>\n</li>\n<li>config</li>\n<li>core\n<ul>\n<li>actions.py</li>\n<li>cloud_permission.py</li>\n<li>utils.py</li>\n<li>exception.py</li>\n<li>decorators.py</li>\n<li>killsession.py</li>\n</ul>\n</li>\n<li>tasks\n<ul>\n<li>add.py</li>\n<li>find_command.py</li>\n<li>list_repository.py</li>\n</ul>\n</li>\n<li>tests\n<ul>\n<li>mock_classes.py</li>\n<li>test_calc.py</li>\n<li>test_cases.py</li>\n<li>test_version.py</li>\n</ul>\n</li>\n<li><strong>init</strong>.py</li>\n</ul>\n</li>\n<li>config\n<ul>\n<li>GCR.csv</li>\n<li>IFARCRSERVER.csv</li>\n<li>default.py</li>\n<li>gunicorn_conf.py</li>\n<li>sg_datalake.cfg</li>\n</ul>\n</li>\n<li>dockers\n<ul>\n<li>app</li>\n<li>celery</li>\n<li>flower</li>\n<li>redis</li>\n</ul>\n</li>\n<li>kube\n<ul>\n<li>deployment.yml</li>\n<li>service.yml</li>\n<li>ingress.yml</li>\n<li>secret-env.yml</li>\n</ul>\n</li>\n<li>run\n<ul>\n<li>dev-env.sh</li>\n<li>prd-env.sh</li>\n</ul>\n</li>\n<li>ssl</li>\n<li>swagger</li>\n</ul>\n</li>\n</ul>\n<h2>APIs</h2>\n<p>This APIs utilise asynchro technique pour recuperer le resultat sur les task qui dure longtemps en generale, une fois le job a ete submit sur APIs, les playbooks ansible vont jouer des commandlines sur des servers specifiques, ca va prendre de deux a 5 minutes, ca depends la bande passante du reseau.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#UUID.py</span>\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span>jsonify<span class=\"token punctuation\">,</span> g\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timedelta\n<span class=\"token keyword\">from</span> flask_restplus <span class=\"token keyword\">import</span> Namespace<span class=\"token punctuation\">,</span> Resource<span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">,</span> marshal\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>cloud_permission <span class=\"token keyword\">import</span> check_cloud_permission\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> DecoratedResource\n<span class=\"token comment\">#from app.app_file import app, redis_cache</span>\n<span class=\"token comment\"># from flask_sg_datalake import DatalakeRecord</span>\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> transaction_correlation_id <span class=\"token keyword\">as</span> correlation_id\n<span class=\"token comment\">#import redis_cache</span>\n<span class=\"token keyword\">from</span> flask_sg_datalake <span class=\"token keyword\">import</span> DatalakeRecord\n<span class=\"token keyword\">import</span> logging\nnamespace <span class=\"token operator\">=</span> Namespace<span class=\"token punctuation\">(</span><span class=\"token string\">'UUID'</span><span class=\"token punctuation\">,</span> description<span class=\"token operator\">=</span><span class=\"token string\">'Get async output here'</span><span class=\"token punctuation\">)</span>\ndl_logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span><span class=\"token string\">'datalake'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&lt;uuid>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Job</span><span class=\"token punctuation\">(</span>Resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Get the job\"\"\"</span>\n\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"get your job result\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        <span class=\"token keyword\">if</span> redis_cache<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            task_not_exist <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                               <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> uuid<span class=\"token punctuation\">,</span>\n                               <span class=\"token string\">\"details\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"The task does not exist\"</span><span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> task_not_exist<span class=\"token punctuation\">,</span> <span class=\"token number\">404</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">from</span> app <span class=\"token keyword\">import</span> celery\n            return_celery_obj <span class=\"token operator\">=</span> celery<span class=\"token punctuation\">.</span>AsyncResult<span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span>\n            default_result <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n                          <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> return_celery_obj<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span>\n                          <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> return_celery_obj<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token string\">\"details\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"The task is being executed,may take longer than 2mins. please click on try it out again\"</span><span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> return_celery_obj<span class=\"token punctuation\">.</span>status <span class=\"token operator\">!=</span> <span class=\"token string\">\"PENDING\"</span><span class=\"token punctuation\">:</span>\n                redis_cache<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> return_celery_obj<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                default_result<span class=\"token punctuation\">[</span><span class=\"token string\">\"details\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> return_celery_obj<span class=\"token punctuation\">.</span>result\n                g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n                                                response_message<span class=\"token operator\">=</span>return_celery_obj<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> details<span class=\"token operator\">=</span>return_celery_obj<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> default_result<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n                                                response_message<span class=\"token operator\">=</span>return_celery_obj<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                                                details<span class=\"token operator\">=</span>return_celery_obj<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> default_result<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span></code></pre></div>\n<p>Some examples of Api methods</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#informatica.py</span>\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> jsonify<span class=\"token punctuation\">,</span> g\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime<span class=\"token punctuation\">,</span> timedelta\n<span class=\"token keyword\">from</span> flask_restplus <span class=\"token keyword\">import</span> Namespace<span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">,</span> reqparse<span class=\"token punctuation\">,</span> marshal\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>apis<span class=\"token punctuation\">.</span>authentication <span class=\"token keyword\">import</span> parsetoken\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>cloud_permission <span class=\"token keyword\">import</span> check_cloud_permission\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>csvreader <span class=\"token keyword\">import</span> check_csvfile\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>exception <span class=\"token keyword\">import</span> NoSuchResource<span class=\"token punctuation\">,</span> InvalidUsage\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>decorators <span class=\"token keyword\">import</span> Resource<span class=\"token punctuation\">,</span>DecoratedResource\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>actions <span class=\"token keyword\">import</span> find_command<span class=\"token punctuation\">,</span> find_command_IS\n<span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> json<span class=\"token punctuation\">,</span> os\n<span class=\"token keyword\">from</span> flask_sg_datalake <span class=\"token keyword\">import</span> DatalakeRecord\n<span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> transaction_correlation_id <span class=\"token keyword\">as</span> correlation_id\ndl_logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span><span class=\"token string\">'datalake'</span><span class=\"token punctuation\">)</span>\n\nnamespace <span class=\"token operator\">=</span> Namespace<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"informatica\"</span><span class=\"token punctuation\">,</span> description<span class=\"token operator\">=</span><span class=\"token string\">\"Informatica Services\"</span><span class=\"token punctuation\">)</span>\n\ninstance_schema_in <span class=\"token operator\">=</span> namespace<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token string\">'Action'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"action\"</span><span class=\"token punctuation\">:</span> fields<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span>\n        description<span class=\"token operator\">=</span><span class=\"token string\">\"Start/Stop\"</span><span class=\"token punctuation\">,</span>\n        required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ninstance_schema_out <span class=\"token operator\">=</span> namespace<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token string\">'Task'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'result'</span><span class=\"token punctuation\">:</span> fields<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">'your task result'</span><span class=\"token punctuation\">,</span>\n                          required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nparser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"Domain name\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"Domain Host name\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"Environment\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"IS_name\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>errorhandler</span><span class=\"token punctuation\">(</span>InvalidUsage<span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>errorhandler</span><span class=\"token punctuation\">(</span>NoSuchResource<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">handle_invalid_usage</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" Catch and forward to app.errorhandler InvalidUsage exceptions \"\"\"</span>\n    response <span class=\"token operator\">=</span> jsonify<span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>to_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    response<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span>status_code\n    <span class=\"token keyword\">return</span> response\n\n<span class=\"token comment\">#List IS</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigrams/&lt;trigram>/domains/&lt;domain_name>/integration-services/\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain host name.Give SVCToolname ex: xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your application environment ex: Development, Homologation, Production'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>security<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oauth2_implicit'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'itaas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">list_Instance</span><span class=\"token punctuation\">(</span>DecoratedResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Shows your IS status\"\"\"</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"This function will show your instance status.\\n\\r\"</span>\n                               <span class=\"token string\">\"Please input your respective information according to token.\\n\\r\"</span>\n                               <span class=\"token string\">\"This part should be changed with IAMaaS in the future.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Usage - OAuth2.0 Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No Such Service\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please verify the domain or contact ETL adm for update the domain list into api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">,</span> domain_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"check your IS status.\n        This endpoint returns the Infrastructure Service(IS) list present in server.\n        Endpoint will return according to your token and your account.\n        ***The information need for json in the request:***\n        * trigram[required]:\n            your application trigram.Ex: MAE\n        * domain_name:\n            domain present in requested server.Ex: AAA_XXX_X00\n        * domain_hostname:\n            use valid SVCToolname.EX: xxx\n        * environment:\n            use environment like Development, Homologation and Production.\n        &lt;br/>&lt;br/>\"\"\"</span>\n        args <span class=\"token operator\">=</span> parsetoken<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">]</span>\n        Environment <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>trigram<span class=\"token punctuation\">,</span> domain_name<span class=\"token punctuation\">)</span>\n        token_info <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_token_info<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        cloud_res <span class=\"token operator\">=</span> check_cloud_permission<span class=\"token punctuation\">(</span>token_info<span class=\"token punctuation\">[</span><span class=\"token string\">'login_ad'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Exception for E2S: verify the E2S in AD group list and proceed for ansible playbook run  \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> tri_search<span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            csv_res <span class=\"token operator\">=</span> check_csvfile<span class=\"token punctuation\">(</span>domain_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cloud_res<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> csv_res<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"trigram not added to AD group list/No such Domain in inventory\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Verify hostname \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hostname<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".socgen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"hostname invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> InvalidUsage<span class=\"token punctuation\">(</span><span class=\"token string\">\"hostname invalid. Use FQDN ex: xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>find_command <span class=\"token keyword\">import</span> find_command\n        task <span class=\"token operator\">=</span>find_command<span class=\"token punctuation\">.</span>apply_async<span class=\"token punctuation\">(</span>\n            kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'action'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ping\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            expires<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"returning task\"</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        redis_cache<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>\n                 correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> response_message<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> details<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'trigram'</span><span class=\"token punctuation\">:</span> trigram<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Domain_name'</span><span class=\"token punctuation\">:</span> domain_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Environment'</span><span class=\"token punctuation\">:</span> Environment<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'uuid'</span><span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">402</span><span class=\"token punctuation\">,</span>\n                                              response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Something wrong went.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Something went wrong. Please try it again\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">402</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_is_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Get the input to find which IS will be operated\"\"\"</span>\n        parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token_info</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Return informations from a given token \"\"\"</span>\n        token_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"login_ad\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>login_ad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"expired\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>is_expired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> token_info\n\n<span class=\"token comment\">#Start/Stop IS</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigrams/&lt;trigram>/domains/&lt;domain_name>/integration-services/&lt;IS_name>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain host name.Give SVCToolname ex: xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your application environment ex: Development, Homologation, Production'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>security<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oauth2_implicit'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'itaas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">put_Instance</span><span class=\"token punctuation\">(</span>DecoratedResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Start/Stop your IS\"\"\"</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"This function will start/stop your service.\\n\\r\"</span>\n                               <span class=\"token string\">\"Please input your respective information according to token.\\n\\r\"</span>\n                               <span class=\"token string\">\"This part should be changed with IAMaaS in the future.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Valid uuid created for task\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Usage - OAuth2.0 Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No Such Service\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please verify the domain or contact ETL adm for update the domain list into api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>expect</span><span class=\"token punctuation\">(</span>instance_schema_in<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">,</span> domain_name<span class=\"token punctuation\">,</span> IS_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Start/Stop IS.\n        This endpoint start/stop Infrastructure Service(IS) present in server.\n        Endpoint will return according to your token and your account.&lt;br/>&lt;br/>\n        ***The information need for json in the request:***\n        * trigram[required]:\n            your application trigram.Ex: MAE\n        * IS name[required]:\n            IS name to be start/stop. Ex: INT_MAE_D01\n        * domain_name:\n            domain present in requested server.Ex: AAA_XXX_X00\n        * domain_hostname:\n            use valid SVCToolname.EX: xxx\n        * environment:\n            use environment like Development, Homologation and Production.\n        \"\"\"</span>\n        args <span class=\"token operator\">=</span> parsetoken<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># IS_name = args['IS_name'].upper()</span>\n        hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">]</span>\n        Environment <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        action <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>parse_is_action<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> action<span class=\"token punctuation\">[</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'START'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'STOP'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span>\n                                            response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Action not specified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">'No such action'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span><span class=\"token punctuation\">)</span>\n\n        token_info <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_token_info<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        cloud_res <span class=\"token operator\">=</span> check_cloud_permission<span class=\"token punctuation\">(</span>token_info<span class=\"token punctuation\">[</span><span class=\"token string\">'login_ad'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Exception for E2S: verify the E2S in AD group list and proceed for ansible playbook run  \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> tri_search<span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            csv_res <span class=\"token operator\">=</span> check_csvfile<span class=\"token punctuation\">(</span>domain_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cloud_res<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> csv_res<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"trigram not added to AD group list/No such Domain in inventory\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Verify hostname \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hostname<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".socgen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"hostname invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> InvalidUsage<span class=\"token punctuation\">(</span><span class=\"token string\">\"hostname invalid. Use FQDN ex: xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>find_command_IS <span class=\"token keyword\">import</span> find_command_IS\n        task <span class=\"token operator\">=</span>find_command_IS<span class=\"token punctuation\">.</span>apply_async<span class=\"token punctuation\">(</span>\n            kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'action'</span><span class=\"token punctuation\">:</span> action<span class=\"token punctuation\">[</span><span class=\"token string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'IS_name'</span><span class=\"token punctuation\">:</span> IS_name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            expires<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        redis_cache<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>\n               DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> response_message<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                              details<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'trigram'</span><span class=\"token punctuation\">:</span> trigram<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Domain_name'</span><span class=\"token punctuation\">:</span> domain_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Environment'</span><span class=\"token punctuation\">:</span> Environment<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'IS_name'</span><span class=\"token punctuation\">:</span> IS_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'action'</span><span class=\"token punctuation\">:</span> action<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'uuid'</span><span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">402</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Something wrong went.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Something went wrong. Please try it again\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_is_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Get the input to find which IS will be operated\"\"\"</span>\n        parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token_info</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Return informations from a given token \"\"\"</span>\n        token_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"login_ad\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>login_ad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"expired\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>is_expired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> token_info\n\n<span class=\"token comment\">#list repository present in server</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigrams/&lt;trigram>/sessions/\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain host name.Give SVCToolname ex: xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain name. ex: AAA_XXX_X00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Your enviornment. ex: Development, Homologation, Production'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#@namespace.param('Repository_name', 'repository name to see list ex: XXX_XXX_X01', required=True)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>security<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oauth2_implicit'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'itaas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">kill_instance_list</span><span class=\"token punctuation\">(</span>DecoratedResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"List Repository connections\"\"\"</span>\n\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"This function will show repository in server.\\n\\r\"</span>\n                               <span class=\"token string\">\"Please input your respective information according to token.\\n\\r\"</span>\n                               <span class=\"token string\">\"This part should be changed with IAMaaS in the future.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># @namespace.param('Domain name', 'your domain ex: AAA_XXX_X00')</span>\n    <span class=\"token comment\"># @namespace.param('Port', 'your host port', optional=True)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Usage - OAuth2.0 Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No Such Service\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please verify the domain or contact ETL adm for update the domain list into api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"get repository present in hostname.\n        This endpoint returns repository present in server.\n        Endpoint will return according to your token and your account.\n        ***The information need for json in the request:***\n        * trigram[required]:\n            your application trigram.Ex: MAE\n        * domain_name:\n            domain present in requested server.Ex: AAA_XXX_X00\n        * domain_hostname:\n            use valid SVCToolname.EX: xxx\n        * environment:\n            use environment like Development, Homologation and Production.\n        &lt;br/>&lt;br/>\"\"\"</span>\n        args <span class=\"token operator\">=</span> parsetoken<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">]</span>\n        domain_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">]</span>\n        Environment <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token comment\">#repo_name = args['Repository_name'].upper()</span>\n        <span class=\"token comment\"># print(repo_name)</span>\n        token_info <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_token_info<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># cloud_res = check_cloud_permission('A000000')</span>\n        cloud_res <span class=\"token operator\">=</span> check_cloud_permission<span class=\"token punctuation\">(</span>token_info<span class=\"token punctuation\">[</span><span class=\"token string\">'login_ad'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Exception for E2S: verify the E2S in AD group list and proceed for ansible playbook run  \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> tri_search<span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            csv_res <span class=\"token operator\">=</span> check_csvfile<span class=\"token punctuation\">(</span>domain_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cloud_res<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> csv_res<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"trigram not added to AD group list/No such Domain in inventory\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Verify hostname \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hostname<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".socgen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"hostname invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> InvalidUsage<span class=\"token punctuation\">(</span><span class=\"token string\">\"hostname invalid. Use FQDN ex: xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>list_repository <span class=\"token keyword\">import</span> list_repository\n        task <span class=\"token operator\">=</span>list_repository<span class=\"token punctuation\">.</span>apply_async<span class=\"token punctuation\">(</span>\n            kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            expires<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(\"setting up redis cache\")</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        redis_cache<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>\n                DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> response_message<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                               details<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'trigram'</span><span class=\"token punctuation\">:</span> trigram<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Domain_name'</span><span class=\"token punctuation\">:</span> domain_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Environment'</span><span class=\"token punctuation\">:</span> Environment<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'uuid'</span><span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">402</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Something wrong went\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Something went wrong. Please try it again\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">402</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_is_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Get the input to find which IS will be operated\"\"\"</span>\n        parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token_info</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Return informations from a given token \"\"\"</span>\n        token_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"login_ad\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>login_ad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"expired\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>is_expired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> token_info\n\n<span class=\"token comment\">#List repository connection</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigrams/&lt;trigram>/sessions/&lt;repo_name>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain host name.Give SVCToolname ex: xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain name. ex: AAA_XXX_X00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Your enviornment. ex: Development, Homologation, Production'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#@namespace.param('Repository_name', 'repository name to see list ex: XXX_XXX_X01', required=True)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>security<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oauth2_implicit'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'itaas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">repository_list</span><span class=\"token punctuation\">(</span>DecoratedResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"List Repository connections\"\"\"</span>\n\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"This function will show repository connections list.\\n\\r\"</span>\n                               <span class=\"token string\">\"Please input your respective information according to token.\\n\\r\"</span>\n                               <span class=\"token string\">\"This part should be changed with IAMaaS in the future.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># @namespace.param('Domain name', 'your domain ex: AAA_XXX_X00')</span>\n    <span class=\"token comment\"># @namespace.param('Port', 'your host port', optional=True)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Usage - OAuth2.0 Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No Such Service\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please verify the domain or contact ETL adm for update the domain list into api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">,</span> repo_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"get your repository connections list.\n        This endpoint returns repository connections available to specific repository in server.\n        Endpoint will return according to your token and your account.\n        ***The information need for json in the request:***\n        * trigram[required]:\n            your application trigram.Ex: MAE\n        * repo name[required]:\n            repository name to be listed. Ex: REP_MAE_D01\n        * domain_name:\n            domain present in requested server.Ex: AAA_XXX_X00\n        * domain_hostname:\n            use valid SVCToolname.EX: xxx\n        * environment:\n            use environment like Development, Homologation and Production.\n        &lt;br/>&lt;br/>\"\"\"</span>\n        args <span class=\"token operator\">=</span> parsetoken<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">]</span>\n        domain_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">]</span>\n        Environment <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">,</span> domain_name<span class=\"token punctuation\">,</span> Environment<span class=\"token punctuation\">,</span> repo_name<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#repo_name = args['Repository_name'].upper()</span>\n        <span class=\"token comment\"># print(repo_name)</span>\n        token_info <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_token_info<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># cloud_res = check_cloud_permission('A000000')</span>\n        cloud_res <span class=\"token operator\">=</span> check_cloud_permission<span class=\"token punctuation\">(</span>token_info<span class=\"token punctuation\">[</span><span class=\"token string\">'login_ad'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Exception for E2S: verify the E2S in AD group list and proceed for ansible playbook run  \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> tri_search<span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            csv_res <span class=\"token operator\">=</span> check_csvfile<span class=\"token punctuation\">(</span>domain_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cloud_res<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> csv_res<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"trigram not added to AD group list/No such Domain in inventory\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Verify hostname \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hostname<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".socgen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"hostname invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> InvalidUsage<span class=\"token punctuation\">(</span><span class=\"token string\">\"hostname invalid. Use FQDN ex: xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>list_repository <span class=\"token keyword\">import</span> list_repo_connection\n        task <span class=\"token operator\">=</span>list_repo_connection<span class=\"token punctuation\">.</span>apply_async<span class=\"token punctuation\">(</span>\n                                      kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                                              <span class=\"token string\">'repo_name'</span><span class=\"token punctuation\">:</span> repo_name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                      expires<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        redis_cache<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>\n                DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> response_message<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                               details<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'trigram'</span><span class=\"token punctuation\">:</span> trigram<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Domain_name'</span><span class=\"token punctuation\">:</span> domain_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Environment'</span><span class=\"token punctuation\">:</span> Environment<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'repository_name'</span><span class=\"token punctuation\">:</span> repo_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'uuid'</span><span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">402</span><span class=\"token punctuation\">,</span>\n                                            response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Something wrong went.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Something went wrong. Please try it again\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">402</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_is_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Get the input to find which IS will be operated\"\"\"</span>\n        parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token_info</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Return informations from a given token \"\"\"</span>\n        token_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"login_ad\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>login_ad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"expired\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>is_expired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> token_info\n\n<span class=\"token comment\">#Killsession using username</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigrams/&lt;trigram>/sessions/&lt;username>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain host name.Give SVCToolname ex: xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain name. ex: AAA_XXX_X00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Your enviornment. ex: Development, Homologation, Production'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Repository_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'repository name to see list ex: XXX_XXX_X01'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>security<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oauth2_implicit'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'itaas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">kill_instance_user</span><span class=\"token punctuation\">(</span>DecoratedResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" Run user session using Username\"\"\"</span>\n\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"This function will kill user session using username.\\n\\r\"</span>\n                               <span class=\"token string\">\"Please input your respective information according to token.\\n\\r\"</span>\n                               <span class=\"token string\">\"This part should be changed with IAMaaS in the future.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># @namespace.param('Username', 'user name to kill session ex: userID', required=True)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Usage - OAuth2.0 Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No Such Service\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please verify the domain or contact ETL adm for update the domain list into api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Kill session using Username.\n        This endpoint will kill user session of specific user using username.\n        Endpoint will return according to your token and your account.\n        ***The information need for json in the request:***\n        * trigram[required]:\n            your application trigram.Ex: MAE\n        * username[required]:\n            specific username to kill session. Ex: userID.\n        * repo name[required]:\n            repository name in server. Ex: REP_MAE_D01\n        * domain_name:\n            domain present in requested server.Ex: AAA_XXX_X00\n        * domain_hostname:\n            use valid SVCToolname.EX: xxx\n        * environment:\n            use environment like Development, Homologation and Production.\n        &lt;br/>&lt;br/>\"\"\"</span>\n        args <span class=\"token operator\">=</span> parsetoken<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">]</span>\n        domain_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">]</span>\n        repo_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Repository_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        Environment <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span>\n        token_info <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_token_info<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        cloud_res <span class=\"token operator\">=</span> check_cloud_permission<span class=\"token punctuation\">(</span>token_info<span class=\"token punctuation\">[</span><span class=\"token string\">'login_ad'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Exception for E2S: verify the E2S in AD group list and proceed for ansible playbook run  \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> tri_search<span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            csv_res <span class=\"token operator\">=</span> check_csvfile<span class=\"token punctuation\">(</span>domain_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cloud_res<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> csv_res<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"trigram not added to AD group list/No such Domain in inventory\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Verify hostname \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hostname<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".socgen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"hostname invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> InvalidUsage<span class=\"token punctuation\">(</span><span class=\"token string\">\"hostname invalid. Use FQDN ex: xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>kill_session <span class=\"token keyword\">import</span> kill_session_user\n        task <span class=\"token operator\">=</span> kill_session_user<span class=\"token punctuation\">.</span>apply_async<span class=\"token punctuation\">(</span>\n            kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'repo_name'</span><span class=\"token punctuation\">:</span> repo_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> username<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            expires<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setting up redis cache\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        redis_cache<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>\n                DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> response_message<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                               details<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'trigram'</span><span class=\"token punctuation\">:</span> trigram<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Domain_name'</span><span class=\"token punctuation\">:</span> domain_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Environment'</span><span class=\"token punctuation\">:</span> Environment<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'repository_name'</span><span class=\"token punctuation\">:</span> repo_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span> username<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'uuid'</span><span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">402</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Something wrong went.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Something went wrong. Please try it again\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">402</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_is_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Get the input to find which IS will be operated\"\"\"</span>\n        parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token_info</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Return informations from a given token \"\"\"</span>\n        token_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"login_ad\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>login_ad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"expired\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>is_expired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> token_info\n\n<span class=\"token comment\">#Killsession using sessionID</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/trigrams/&lt;trigram>/sessions/&lt;sessionID>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain host name.Give SVCToolname ex: xxx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'your domain name. ex: AAA_XXX_X00'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Your enviornment. ex: Development, Homologation, Production'</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>param</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Repository_name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'repository name to see list ex: XXX_XXX_X01'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>security<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oauth2_implicit'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'profile'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'itaas'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'openid'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">kill_instance_session</span><span class=\"token punctuation\">(</span>DecoratedResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" Kill user session using session ID \"\"\"</span>\n\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>doc</span><span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">\"This function will kill user session using sessionID.\\n\\r\"</span>\n                               <span class=\"token string\">\"Please input your respective information according to token.\\n\\r\"</span>\n                               <span class=\"token string\">\"This part should be changed with IAMaaS in the future.\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid Usage - OAuth2.0 Failed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No Such Service\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token decorator annotation punctuation\">@namespace<span class=\"token punctuation\">.</span>response</span><span class=\"token punctuation\">(</span><span class=\"token number\">403</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Please verify the domain or contact ETL adm for update the domain list into api\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">,</span> sessionID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Kill session using session ID.\n        This endpoint will kill session using sessionID.\n        Endpoint will return according to your token and your account.\n        ***The information need for json in the request:***\n        * trigram[required]:\n            your application trigram.Ex: MAE\n        * sessionID[required]:\n            specific session identified by sessionID to kill. it should be digit.Ex: 4326.\n        * repo name[required]:\n            repository name in server. Ex: REP_MAE_D01\n        * domain_name:\n            domain present in requested server.Ex: AAA_XXX_X00\n        * domain_hostname:\n            use valid SVCToolname.EX: xxx\n        * environment:\n            use environment like Development, Homologation and Production.\n        &lt;br/>&lt;br/>\"\"\"</span>\n        args <span class=\"token operator\">=</span> parsetoken<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">]</span>\n        domain_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">]</span>\n        Environment <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span>\n        repo_name <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Repository_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#sessionID = args['SessionID']</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> sessionID<span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"sessionID is not valid. try listing session to get valid sessionID\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">403</span><span class=\"token punctuation\">)</span>\n        token_info <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_token_info<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\n        cloud_res <span class=\"token operator\">=</span> check_cloud_permission<span class=\"token punctuation\">(</span>token_info<span class=\"token punctuation\">[</span><span class=\"token string\">'login_ad'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token triple-quoted-string string\">\"\"\" Exception for E2S: verify the E2S in AD group list and proceed for ansible playbook run  \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> tri_search<span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            csv_res <span class=\"token operator\">=</span> check_csvfile<span class=\"token punctuation\">(</span>domain_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> cloud_res<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> csv_res<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> NoSuchResource<span class=\"token punctuation\">(</span><span class=\"token string\">\"trigram not added to AD group list/No such Domain in inventory\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Verify hostname \"\"\"</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hostname<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">\".socgen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"hostname invalid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> InvalidUsage<span class=\"token punctuation\">(</span><span class=\"token string\">\"hostname invalid. Use FQDN ex: xxx\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>tasks<span class=\"token punctuation\">.</span>kill_session <span class=\"token keyword\">import</span> run_killsession_sessionID\n        task <span class=\"token operator\">=</span>run_killsession_sessionID<span class=\"token punctuation\">.</span>apply_async<span class=\"token punctuation\">(</span>\n            kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'repo_name'</span><span class=\"token punctuation\">:</span> repo_name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'sessionID'</span><span class=\"token punctuation\">:</span> sessionID<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            expires<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">from</span> app<span class=\"token punctuation\">.</span>app_file <span class=\"token keyword\">import</span> redis_cache\n        redis_cache<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> task<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>\n                DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">202</span><span class=\"token punctuation\">,</span> response_message<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>\n                               details<span class=\"token operator\">=</span>task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> hostname<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'trigram'</span><span class=\"token punctuation\">:</span> trigram<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Domain_name'</span><span class=\"token punctuation\">:</span> domain_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'Environment'</span><span class=\"token punctuation\">:</span> Environment<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'repository_name'</span><span class=\"token punctuation\">:</span> repo_name<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'sessionID'</span><span class=\"token punctuation\">:</span> sessionID<span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">'uuid'</span><span class=\"token punctuation\">:</span> task<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">202</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            g<span class=\"token punctuation\">.</span>dl_logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>DatalakeRecord<span class=\"token punctuation\">(</span>correlation_id<span class=\"token punctuation\">,</span> event<span class=\"token operator\">=</span><span class=\"token string\">\"response\"</span><span class=\"token punctuation\">,</span> response_http_code<span class=\"token operator\">=</span><span class=\"token number\">402</span><span class=\"token punctuation\">,</span>\n                                             response_message<span class=\"token operator\">=</span><span class=\"token string\">\"Something wrong went.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"Something went wrong. Please try it again\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">402</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_is_action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Get the input to find which IS will be operated\"\"\"</span>\n        parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"action\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_token_info</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Return informations from a given token \"\"\"</span>\n        token_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"login_ad\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>login_ad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>mail<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token string\">\"expired\"</span><span class=\"token punctuation\">:</span> token<span class=\"token punctuation\">.</span>is_expired<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> token_info\n\n<span class=\"token triple-quoted-string string\">\"\"\" tri_search() function returns True only when\ntrigram entered in API is in ADGroup list of client id.\ninput: cloud_res, trigram\noutput: True/False\"\"\"</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">tri_search</span><span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">,</span> trigram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cloud_res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> cloud_res<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> trigram<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">parsetoken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    Function : simulate the response from account as a service\n    :param application: your [TRI]+[IRT]\n    :param region: your region(zone )\n    :param environment: your [TRI]+[IRT]\n    :return: a dict contains the account information\n    \"\"\"</span>\n    parser <span class=\"token operator\">=</span> reqparse<span class=\"token punctuation\">.</span>RequestParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"application\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"region\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'Environment'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'IS_name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'Domain Host name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'Domain name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'Repository_name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'SessionID'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Swagger SG</h2>\n<p>API doit etre conform au norm API chez Societe Generale</p>\n<p>on s'installe le swagger submodule de la SG</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> submodule <span class=\"token function\">add</span> -b templates https://xxxxxx/BeAPI/sg-swagger-ui.git swagger</code></pre></div>\n<p>client id doit etre creer manuellement via SG API market, en suite, on aura client name avec le client id:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SWAGGER_UI_OAUTH_REALM</span><span class=\"token operator\">=</span><span class=\"token string\">'/'</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SWAGGER_UI_OAUTH_APP_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">'itaas'</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SWAGGER_UI_OAUTH_CLIENT_ID</span><span class=\"token operator\">=</span><span class=\"token string\">'xxxxxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'</span></code></pre></div>\n<h2>RUN</h2>\n<p>Cette application utilise le user generique afin de deployer l'API, assure que les variables environnement sont bien rempli sur <code class=\"language-text\">dev-env.sh</code> ou <code class=\"language-text\">prd-env.sh</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">USER</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"identification\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gunicorn manage:app -c config/gunicorn_conf.py --timeout <span class=\"token number\">350</span> --certfile<span class=\"token operator\">=</span>ssl/xxx.crt --keyfile<span class=\"token operator\">=</span>ssl/xxx.key <span class=\"token operator\">&amp;</span></code></pre></div>\n<p>pour lancer le celery worker:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">celery flower -A app.celery worker1 --concurrency<span class=\"token operator\">=</span><span class=\"token number\">2</span> --loglevel<span class=\"token operator\">=</span>INFO --port<span class=\"token operator\">=</span><span class=\"token number\">5555</span> <span class=\"token operator\">&amp;</span></code></pre></div>\n<h2>DEPLOY</h2>\n<p>On a utilise secrets service in kubernetes pour la partie SSL et les variables environnements.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create -f /code/ETLaaS_GCR_async/kube/secret-env.yml --namespace ns-xxx-xxxxx-dev-ssa</code></pre></div>\n<p>Docker local:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.1'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">celery_worker</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> etlaas<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_NUMBER<span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> redis<span class=\"token punctuation\">-</span>master\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> bash <span class=\"token punctuation\">-</span>c \"./celery_start.sh; sleep 2; tail <span class=\"token punctuation\">-</span>f /code/ETLaaS_GCR_async/error.log\"\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> network<span class=\"token punctuation\">-</span>l7<span class=\"token punctuation\">-</span>e2s<span class=\"token punctuation\">-</span>dev\n    <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">'com.docker.ucp.access.label=/Run/xxxx'</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">'com.docker.ucp.access.owner=xxxx'</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> DNSNAME=xxxx\n    <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> run/dev<span class=\"token punctuation\">-</span>env.sh\n    <span class=\"token key atrule\">secrets</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> xxxx.crt\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> xxxx.crt\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> xxxx.key\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> xxxx.key\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> e2s_vault_write_token\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> e2s_vault_write_token\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> e2s<span class=\"token punctuation\">-</span>dev<span class=\"token punctuation\">-</span>write<span class=\"token punctuation\">-</span>consul<span class=\"token punctuation\">-</span>ACL\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> e2s<span class=\"token punctuation\">-</span>dev<span class=\"token punctuation\">-</span>write<span class=\"token punctuation\">-</span>consul<span class=\"token punctuation\">-</span>ACL\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> LDAP_LOGIN\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> LDAP_LOGIN\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> LDAP_PASSWORD\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> LDAP_PASSWORD\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> private_key\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> private_key\n        <span class=\"token key atrule\">uid</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1000'</span>\n        <span class=\"token key atrule\">gid</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1000'</span>\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0600</span>\n\n  <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> etlaas<span class=\"token punctuation\">:</span>$<span class=\"token punctuation\">{</span>BUILD_NUMBER<span class=\"token punctuation\">}</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> redis<span class=\"token punctuation\">-</span>master\n      <span class=\"token punctuation\">-</span> celery_worker\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> bash <span class=\"token punctuation\">-</span>c \"./startup.sh; sleep 3; tail <span class=\"token punctuation\">-</span>f /code/ETLaaS_GCR_async/error.log\"\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> network<span class=\"token punctuation\">-</span>l7<span class=\"token punctuation\">-</span>e2s<span class=\"token punctuation\">-</span>dev\n    <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">'com.docker.ucp.access.label=/Run/xxxx'</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token string\">'com.docker.ucp.access.owner=xxxx'</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> DNSNAME=etlaas<span class=\"token punctuation\">-</span>gcr\n\n    <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> run/dev<span class=\"token punctuation\">-</span>env.sh\n    <span class=\"token key atrule\">secrets</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> xxxx.crt\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> xxxx.crt\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> xxxx.key\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> xxxx.key\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> e2s_vault_write_token\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> e2s_vault_write_token\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> e2s<span class=\"token punctuation\">-</span>dev<span class=\"token punctuation\">-</span>write<span class=\"token punctuation\">-</span>consul<span class=\"token punctuation\">-</span>ACL\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> e2s<span class=\"token punctuation\">-</span>dev<span class=\"token punctuation\">-</span>write<span class=\"token punctuation\">-</span>consul<span class=\"token punctuation\">-</span>ACL\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> LDAP_LOGIN\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> LDAP_LOGIN\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> LDAP_PASSWORD\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> LDAP_PASSWORD\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0777</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">source</span><span class=\"token punctuation\">:</span> private_key\n        <span class=\"token key atrule\">target</span><span class=\"token punctuation\">:</span> private_key\n        <span class=\"token key atrule\">uid</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1000'</span>\n        <span class=\"token key atrule\">gid</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1000'</span>\n        <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0600</span>\n\n<span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">network-l7-e2s-dev</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n<span class=\"token key atrule\">secrets</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">xxxx.crt</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">xxxx.key</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">e2s_vault_write_token</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">e2s-dev-write-consul-ACL</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">LDAP_LOGIN</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">LDAP_PASSWORD</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">private_key</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<p>Kubernetes:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">#kube-deploy.sh</span>\n<span class=\"token comment\">#redis deployment</span>\n./kubectl create -f kube/redis/redis-deployment.yml --namespace ns-xxx-dev-ssa\n<span class=\"token comment\">#redis service</span>\n./kubectl create -f kube/redis/redis-svc.yml --namespace ns-xxx-dev-ssa\n<span class=\"token comment\">#celery deployment</span>\n./kubectl create -f kube/redis/celery-deployment.yml --namespace ns-xxx-dev-ssa\n<span class=\"token comment\">#celery service</span>\n./kubectl create -f kube/redis/celery-svc.yml --namespace ns-xxx-dev-ssa\n<span class=\"token comment\">#application deployment</span>\n./kubectl create -f kube/etlaas-deployment.yml --namespace ns-xxx-dev-ssa\n<span class=\"token comment\">#application service</span>\n./kubectl create -f kube/etlaas-svc.yml --namespace ns-xxx-dev-ssa\n<span class=\"token comment\">#application ingress</span>\n./kubectl create -f kube/etlaas-ingress.yml --namespace ns-xxx-dev-ssa</code></pre></div>\n<h1>CICD</h1>\n<p>Pour la partie CICD, l'implementation de scripts Jenkinsfile sur Jenkins Instance avec le webhook de pull-resquest sur le repository</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token comment\">// Jenkinfile</span>\n<span class=\"token function\">dockerNode</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">:</span> <span class=\"token string\">'maven-ezweb-builder:3.3.9-jdk-1.8.0.121-node-9.5.0'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//Environment properties to build and releae application modules</span>\n<span class=\"token function\">withEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'DOCKER_HOST=tcp://xxx:443'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'UCP_URL=https://xxx'</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token string\">'DOCKER_TLS_VERIFY=1'</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token string\">'DOCKER_CERT_PATH=/home/jenkins'</span><span class=\"token punctuation\">,</span>\n\t <span class=\"token string\">'UCP_credentialsId=UCP_Credentials'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">//Credentials to connect with docker services</span>\n<span class=\"token function\">withCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">$</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'UsernamePasswordMultiBinding'</span><span class=\"token punctuation\">,</span>\n\t\tcredentialsId<span class=\"token punctuation\">:</span> <span class=\"token string gstring\">\"<span class=\"token expression\"><span class=\"token punctuation\">$</span>UCP_credentialsId</span>\"</span><span class=\"token punctuation\">,</span>\n\t\tusernameVariable<span class=\"token punctuation\">:</span> <span class=\"token string\">'USER'</span><span class=\"token punctuation\">,</span>\n\t\tpasswordVariable<span class=\"token punctuation\">:</span> <span class=\"token string\">'PASSWORD'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t    <span class=\"token function\">withCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span>credentialsId<span class=\"token punctuation\">:</span> <span class=\"token string\">'e2s_dev_svc-kube.yml'</span><span class=\"token punctuation\">,</span> variable<span class=\"token punctuation\">:</span> <span class=\"token string\">'KUBECONFIG'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//fetching ucp certs for deployments</span>\n\tsh <span class=\"token string\">'''AUTHTOKEN=$(curl -sk -d \"{\\\\\"username\\\\\":\\\\\"$USER\\\\\",\\\\\"password\\\\\":\\\\\"$PASSWORD\\\\\"}\" $UCP_URL/auth/login | jq -r .auth_token)\n    \tcurl -k -H \"Authorization: Bearer $AUTHTOKEN\" $UCP_URL/api/clientbundle -o $HOME/bundle.zip\n    \tunzip -o $HOME/bundle.zip -d $HOME'''</span>\n    \tsh <span class=\"token string\">'docker login --username=$USER  --password=$PASSWORD https://xxxx/'</span>\n\n<span class=\"token function\">stage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GIT-CLONE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \tgit changelog<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> poll<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://xxx/GTS-PAS-MDW-APP/ETLaaS_GCR_async.git'</span>\n\t\t  env<span class=\"token punctuation\">.</span>GIT_COMMIT <span class=\"token operator\">=</span> <span class=\"token function\">sh</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">:</span> <span class=\"token string gstring\">\"git rev-parse HEAD\"</span><span class=\"token punctuation\">,</span> returnStdout<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token function\">stage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'BUILD_IMAGE'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sh <span class=\"token string gstring\">\"\"\"docker build -f dockers/ETLaaS_async/Dockerfile --tag etlaas:etlaas-kube --force-rm --no-cache .; docker push etlaas:etlaas-kube\"\"\"</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token function\">stage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'KUBECTL'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sh <span class=\"token string gstring\">\"\"\"curl -k -L http://xxxx/eservices/sources/docker-client/kubectl-1.8.zip -o /home/jenkins/.jenkins/workspace/kube_etl/kubectl.zip &amp;&amp; unzip -o /home/jenkins/.jenkins/workspace/kube_etl/kubectl.zip &amp;&amp; chmod +x ./kubectl\"\"\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">stage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'KUBE_DEPLOY'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sh <span class=\"token string\">'''sh kube/kube-deploy.sh '''</span>\n<span class=\"token punctuation\">}</span>\n\t\t    <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","2009693873","2031412112","3825832676"]}